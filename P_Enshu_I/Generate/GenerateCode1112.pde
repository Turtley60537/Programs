float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=570.0;
  pointY[0]=295.0;
  pointX[1]=596.6666;
  pointY[1]=323.3333;
  pointX[2]=595.0;
  pointY[2]=325.0;
  pointX[3]=581.6666;
  pointY[3]=330.0;
  pointX[4]=570.0;
  pointY[4]=331.66666;
  pointX[5]=555.0;
  pointY[5]=331.66666;
  pointX[6]=509.99997;
  pointY[6]=330.0;
  pointX[7]=509.99997;
  pointY[7]=330.0;
  pointX[8]=443.3333;
  pointY[8]=318.3333;
  pointX[9]=443.3333;
  pointY[9]=318.3333;
  pointX[10]=418.3333;
  pointY[10]=310.0;
  pointX[11]=421.66666;
  pointY[11]=310.0;
  pointX[12]=421.66666;
  pointY[12]=310.0;
  pointX[13]=486.66666;
  pointY[13]=315.0;
  pointX[14]=486.66666;
  pointY[14]=315.0;
  pointX[15]=486.66666;
  pointY[15]=315.0;
  pointX[16]=486.66666;
  pointY[16]=315.0;
  pointX[17]=486.66666;
  pointY[17]=315.0;
  pointX[18]=486.66666;
  pointY[18]=315.0;
  pointX[19]=486.66666;
  pointY[19]=315.0;
  pointX[20]=486.66666;
  pointY[20]=315.0;
  pointX[21]=380.0;
  pointY[21]=316.66666;
  pointX[22]=380.0;
  pointY[22]=316.66666;
  pointX[23]=386.66666;
  pointY[23]=301.66666;
  pointX[24]=409.99997;
  pointY[24]=298.3333;
  pointX[25]=418.3333;
  pointY[25]=298.3333;
  pointX[26]=418.3333;
  pointY[26]=298.3333;
  pointX[27]=444.99997;
  pointY[27]=308.3333;
  pointX[28]=444.99997;
  pointY[28]=308.3333;
  pointX[29]=441.66666;
  pointY[29]=311.66666;
  pointX[30]=433.3333;
  pointY[30]=308.3333;
  pointX[31]=421.66666;
  pointY[31]=300.0;
  pointX[32]=421.66666;
  pointY[32]=300.0;
  pointX[33]=421.66666;
  pointY[33]=286.66666;
  pointX[34]=423.3333;
  pointY[34]=280.0;
  pointX[35]=446.66666;
  pointY[35]=270.0;
  pointX[36]=471.66666;
  pointY[36]=270.0;
  pointX[37]=499.99997;
  pointY[37]=271.66666;
  pointX[38]=525.0;
  pointY[38]=283.3333;
  pointX[39]=535.0;
  pointY[39]=293.3333;
  pointX[40]=535.0;
  pointY[40]=293.3333;
  pointX[41]=523.3333;
  pointY[41]=300.0;
  pointX[42]=474.99997;
  pointY[42]=296.66666;
  pointX[43]=474.99997;
  pointY[43]=296.66666;
  pointX[44]=248.33333;
  pointY[44]=216.66666;
  pointX[45]=248.33333;
  pointY[45]=216.66666;
  pointX[46]=211.66666;
  pointY[46]=178.33333;
  pointX[47]=211.66666;
  pointY[47]=178.33333;
  pointX[48]=209.99998;
  pointY[48]=170.0;
  pointX[49]=209.99998;
  pointY[49]=163.33333;
  pointX[50]=209.99998;
  pointY[50]=160.0;
  pointX[51]=208.33333;
  pointY[51]=156.66666;
  pointX[52]=204.99998;
  pointY[52]=156.66666;
  pointX[53]=204.99998;
  pointY[53]=156.66666;
  pointX[54]=191.66666;
  pointY[54]=153.33333;
  pointX[55]=178.33333;
  pointY[55]=150.0;
  pointX[56]=178.33333;
  pointY[56]=150.0;
  pointX[57]=165.0;
  pointY[57]=150.0;
  pointX[58]=158.33333;
  pointY[58]=150.0;
  pointX[59]=150.0;
  pointY[59]=153.33333;
  pointX[60]=145.0;
  pointY[60]=160.0;
  pointX[61]=145.0;
  pointY[61]=170.0;
  pointX[62]=146.66666;
  pointY[62]=176.66666;
  pointX[63]=146.66666;
  pointY[63]=176.66666;
  pointX[64]=229.99998;
  pointY[64]=226.66666;
  pointX[65]=229.99998;
  pointY[65]=226.66666;
  pointX[66]=321.66666;
  pointY[66]=261.66666;
  pointX[67]=351.66666;
  pointY[67]=266.66666;
  pointX[68]=361.66666;
  pointY[68]=270.0;
  pointX[69]=361.66666;
  pointY[69]=270.0;
  pointX[70]=380.0;
  pointY[70]=270.0;
  pointX[71]=380.0;
  pointY[71]=270.0;
  pointX[72]=391.66666;
  pointY[72]=263.3333;
  pointX[73]=391.66666;
  pointY[73]=263.3333;
  pointX[74]=401.66666;
  pointY[74]=239.99998;
  pointX[75]=413.3333;
  pointY[75]=221.66666;
  pointX[76]=416.66666;
  pointY[76]=214.99998;
  pointX[77]=418.3333;
  pointY[77]=206.66666;
  pointX[78]=418.3333;
  pointY[78]=203.33333;
  pointX[79]=416.66666;
  pointY[79]=196.66666;
  pointX[80]=413.3333;
  pointY[80]=191.66666;
  pointX[81]=409.99997;
  pointY[81]=186.66666;
  pointX[82]=408.3333;
  pointY[82]=185.0;
  pointX[83]=399.99997;
  pointY[83]=176.66666;
  pointX[84]=376.66666;
  pointY[84]=165.0;
  pointX[85]=376.66666;
  pointY[85]=165.0;
  pointX[86]=350.0;
  pointY[86]=153.33333;
  pointX[87]=338.3333;
  pointY[87]=148.33333;
  pointX[88]=330.0;
  pointY[88]=145.0;
  pointX[89]=326.66666;
  pointY[89]=145.0;
  pointX[90]=321.66666;
  pointY[90]=145.0;
  pointX[91]=320.0;
  pointY[91]=145.0;
  pointX[92]=320.0;
  pointY[92]=145.0;
  pointX[93]=308.3333;
  pointY[93]=145.0;
  pointX[94]=305.0;
  pointY[94]=145.0;
  pointX[95]=303.3333;
  pointY[95]=145.0;
  pointX[96]=301.66666;
  pointY[96]=145.0;
  pointX[97]=300.0;
  pointY[97]=146.66666;
  pointX[98]=300.0;
  pointY[98]=146.66666;
  pointX[99]=298.3333;
  pointY[99]=153.33333;
  pointX[100]=295.0;
  pointY[100]=161.66666;
  pointX[101]=295.0;
  pointY[101]=175.0;
  pointX[102]=295.0;
  pointY[102]=175.0;
  pointX[103]=295.0;
  pointY[103]=175.0;
  pointX[104]=295.0;
  pointY[104]=175.0;
  pointX[105]=295.0;
  pointY[105]=254.99998;
  pointX[106]=296.66666;
  pointY[106]=263.3333;
  pointX[107]=296.66666;
  pointY[107]=268.3333;
  pointX[108]=296.66666;
  pointY[108]=271.66666;
  pointX[109]=296.66666;
  pointY[109]=275.0;
  ellipX[0]=298.3333;
  ellipY[0]=86.666664;
 
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=203.33333;
  pointY[0]=76.666664;
  pointX[1]=203.33333;
  pointY[1]=78.33333;
  pointX[2]=203.33333;
  pointY[2]=78.33333;
  pointX[3]=203.33333;
  pointY[3]=78.33333;
  pointX[4]=183.33333;
  pointY[4]=114.99999;
  pointX[5]=173.33333;
  pointY[5]=124.99999;
  pointX[6]=151.66666;
  pointY[6]=138.33333;
  pointX[7]=151.66666;
  pointY[7]=138.33333;
  pointX[8]=123.33333;
  pointY[8]=145.0;
  pointX[9]=113.33333;
  pointY[9]=145.0;
  pointX[10]=109.99999;
  pointY[10]=145.0;
  pointX[11]=106.666664;
  pointY[11]=141.66666;
  pointX[12]=106.666664;
  pointY[12]=135.0;
  pointX[13]=108.33333;
  pointY[13]=119.99999;
  pointX[14]=108.33333;
  pointY[14]=119.99999;
  pointX[15]=123.33333;
  pointY[15]=101.666664;
  pointX[16]=123.33333;
  pointY[16]=101.666664;
  pointX[17]=140.0;
  pointY[17]=93.33333;
  pointX[18]=140.0;
  pointY[18]=93.33333;
  pointX[19]=171.66666;
  pointY[19]=93.33333;
  pointX[20]=193.33333;
  pointY[20]=98.33333;
  pointX[21]=216.66666;
  pointY[21]=109.99999;
  pointX[22]=216.66666;
  pointY[22]=109.99999;
  pointX[23]=278.3333;
  pointY[23]=148.33333;
  pointX[24]=291.66666;
  pointY[24]=156.66666;
  pointX[25]=303.3333;
  pointY[25]=166.66666;
  pointX[26]=308.3333;
  pointY[26]=173.33333;
  pointX[27]=308.3333;
  pointY[27]=173.33333;
  pointX[28]=323.3333;
  pointY[28]=191.66666;
  pointX[29]=323.3333;
  pointY[29]=191.66666;
  pointX[30]=326.66666;
  pointY[30]=206.66666;
  pointX[31]=326.66666;
  pointY[31]=216.66666;
  pointX[32]=326.66666;
  pointY[32]=223.33333;
  pointX[33]=325.0;
  pointY[33]=229.99998;
  pointX[34]=323.3333;
  pointY[34]=236.66666;
  pointX[35]=320.0;
  pointY[35]=243.33333;
  pointX[36]=320.0;
  pointY[36]=243.33333;
  pointX[37]=306.66666;
  pointY[37]=258.3333;
  pointX[38]=300.0;
  pointY[38]=261.66666;
  pointX[39]=293.3333;
  pointY[39]=265.0;
  pointX[40]=288.3333;
  pointY[40]=268.3333;
  pointX[41]=278.3333;
  pointY[41]=271.66666;
  pointX[42]=266.66666;
  pointY[42]=276.66666;
  pointX[43]=261.66666;
  pointY[43]=276.66666;
  pointX[44]=261.66666;
  pointY[44]=276.66666;
  pointX[45]=249.99998;
  pointY[45]=273.3333;
  pointX[46]=239.99998;
  pointY[46]=268.3333;
  pointX[47]=229.99998;
  pointY[47]=263.3333;
  pointX[48]=229.99998;
  pointY[48]=263.3333;
  pointX[49]=214.99998;
  pointY[49]=251.66666;
  pointX[50]=204.99998;
  pointY[50]=239.99998;
  pointX[51]=204.99998;
  pointY[51]=239.99998;
  pointX[52]=193.33333;
  pointY[52]=219.99998;
  pointX[53]=193.33333;
  pointY[53]=219.99998;
  pointX[54]=188.33333;
  pointY[54]=191.66666;
  pointX[55]=188.33333;
  pointY[55]=183.33333;
  pointX[56]=188.33333;
  pointY[56]=183.33333;
  pointX[57]=191.66666;
  pointY[57]=165.0;
  pointX[58]=191.66666;
  pointY[58]=165.0;
  pointX[59]=201.66666;
  pointY[59]=155.0;
  pointX[60]=201.66666;
  pointY[60]=155.0;
  pointX[61]=219.99998;
  pointY[61]=145.0;
  pointX[62]=246.66666;
  pointY[62]=136.66666;
  pointX[63]=260.0;
  pointY[63]=135.0;
  pointX[64]=273.3333;
  pointY[64]=135.0;
  pointX[65]=285.0;
  pointY[65]=135.0;
  pointX[66]=296.66666;
  pointY[66]=135.0;
  pointX[67]=296.66666;
  pointY[67]=135.0;
  pointX[68]=320.0;
  pointY[68]=136.66666;
  pointX[69]=335.0;
  pointY[69]=141.66666;
  pointX[70]=335.0;
  pointY[70]=141.66666;
  pointX[71]=335.0;
  pointY[71]=141.66666;
  pointX[72]=335.0;
  pointY[72]=141.66666;
  pointX[73]=384.99997;
  pointY[73]=173.33333;
  pointX[74]=384.99997;
  pointY[74]=173.33333;
  pointX[75]=384.99997;
  pointY[75]=173.33333;
  pointX[76]=393.3333;
  pointY[76]=199.99998;
  pointX[77]=393.3333;
  pointY[77]=211.66666;
  pointX[78]=393.3333;
  pointY[78]=216.66666;
  pointX[79]=388.3333;
  pointY[79]=226.66666;
  pointX[80]=388.3333;
  pointY[80]=226.66666;
  pointX[81]=368.3333;
  pointY[81]=253.33333;
  pointX[82]=365.0;
  pointY[82]=256.66666;
  pointX[83]=358.3333;
  pointY[83]=263.3333;
  pointX[84]=351.66666;
  pointY[84]=266.66666;
  pointX[85]=345.0;
  pointY[85]=268.3333;
  pointX[86]=333.3333;
  pointY[86]=268.3333;
  pointX[87]=313.3333;
  pointY[87]=268.3333;
  pointX[88]=286.66666;
  pointY[88]=268.3333;
  pointX[89]=286.66666;
  pointY[89]=268.3333;
  pointX[90]=234.99998;
  pointY[90]=265.0;
  pointX[91]=221.66666;
  pointY[91]=260.0;
  pointX[92]=213.33333;
  pointY[92]=258.3333;
  pointX[93]=209.99998;
  pointY[93]=258.3333;
  pointX[94]=208.33333;
  pointY[94]=253.33333;
  pointX[95]=208.33333;
  pointY[95]=253.33333;
  pointX[96]=203.33333;
  pointY[96]=224.99998;
  pointX[97]=203.33333;
  pointY[97]=216.66666;
  pointX[98]=203.33333;
  pointY[98]=209.99998;
  pointX[99]=203.33333;
  pointY[99]=203.33333;
  pointX[100]=206.66666;
  pointY[100]=199.99998;
  pointX[101]=216.66666;
  pointY[101]=188.33333;
  pointX[102]=223.33333;
  pointY[102]=185.0;
  pointX[103]=228.33333;
  pointY[103]=183.33333;
  pointX[104]=228.33333;
  pointY[104]=183.33333;
  pointX[105]=241.66666;
  pointY[105]=181.66666;
  pointX[106]=249.99998;
  pointY[106]=181.66666;
  pointX[107]=
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=98.33333;
  pointY[0]=31.666666;
  pointX[1]=131.66666;
  pointY[1]=49.999996;
  pointX[2]=176.66666;
  pointY[2]=81.666664;
  pointX[3]=218.33333;
  pointY[3]=119.99999;
  pointX[4]=243.33333;
  pointY[4]=161.66666;
  pointX[5]=260.0;
  pointY[5]=199.99998;
  pointX[6]=260.0;
  pointY[6]=229.99998;
  pointX[7]=253.33333;
  pointY[7]=251.66666;
  pointX[8]=241.66666;
  pointY[8]=258.3333;
  pointX[9]=234.99998;
  pointY[9]=258.3333;
  pointX[10]=243.33333;
  pointY[10]=226.66666;
  pointX[11]=313.3333;
  pointY[11]=151.66666;
  pointX[12]=348.3333;
  pointY[12]=135.0;
  pointX[13]=370.0;
  pointY[13]=133.33333;
  pointX[14]=378.3333;
  pointY[14]=140.0;
  pointX[15]=378.3333;
  pointY[15]=148.33333;
  pointX[16]=373.3333;
  pointY[16]=166.66666;
  pointX[17]=373.3333;
  pointY[17]=166.66666;
  pointX[18]=365.0;
  pointY[18]=183.33333;
  pointX[19]=365.0;
  pointY[19]=183.33333;
  pointX[20]=388.3333;
  pointY[20]=171.66666;
  pointX[21]=409.99997;
  pointY[21]=163.33333;
  pointX[22]=424.99997;
  pointY[22]=158.33333;
  pointX[23]=428.3333;
  pointY[23]=156.66666;
  pointX[24]=428.3333;
  pointY[24]=161.66666;
  pointX[25]=423.3333;
  pointY[25]=171.66666;
  pointX[26]=394.99997;
  pointY[26]=186.66666;
  pointX[27]=373.3333;
  pointY[27]=194.99998;
  pointX[28]=331.66666;
  pointY[28]=206.66666;
  pointX[29]=331.66666;
  pointY[29]=206.66666;
  pointX[30]=323.3333;
  pointY[30]=191.66666;
  pointX[31]=370.0;
  pointY[31]=156.66666;
  pointX[32]=411.66666;
  pointY[32]=145.0;
  pointX[33]=438.3333;
  pointY[33]=145.0;
  pointX[34]=448.3333;
  pointY[34]=158.33333;
  pointX[35]=446.66666;
  pointY[35]=181.66666;
  pointX[36]=429.99997;
  pointY[36]=209.99998;
  pointX[37]=408.3333;
  pointY[37]=231.66666;
  pointX[38]=399.99997;
  pointY[38]=241.66666;
  lineX1[1]=216.66666;
  lineY1[1]=111.666664;
  lineX2[1]=316.66666;
  lineY2[1]=188.33333;
  lineX1[2]=428.3333;
  lineY1[2]=254.99998;
  lineX2[2]=456.66666;
  lineY2[2]=301.66666;
  lineX1[3]=454.99997;
  lineY1[3]=308.3333;
  lineX2[3]=383.3333;
  lineY2[3]=371.66666;
  lineX1[4]=360.0;
  lineY1[4]=371.66666;
  lineX2[4]=310.0;
  lineY2[4]=371.66666;
  lineX1[5]=236.66666;
  lineY1[5]=273.3333;
  lineX2[5]=258.3333;
  lineY2[5]=161.66666;
  lineX1[6]=326.66666;
  lineY1[6]=111.666664;
  lineX2[6]=375.0;
  lineY2[6]=111.666664;
  lineX1[7]=486.66666;
  lineY1[7]=111.666664;
  lineX2[7]=560.0;
  lineY2[7]=131.66666;
  lineX1[8]=591.6666;
  lineY1[8]=166.66666;
  lineX2[8]=550.0;
  lineY2[8]=303.3333;
  lineX1[9]=520.0;
  lineY1[9]=331.66666;
  lineX2[9]=408.3333;
  lineY2[9]=389.99997;
  lineX1[10]=308.3333;
  lineY1[10]=370.0;
  lineX2[10]=148.33333;
  lineY2[10]=238.33333;
  rectX[1]=270.0;
  rectY[1]=106.666664;
  rectW[1]=63.333313;
  rectH[1]=44.999992;
  rectX[2]=419.99997;
  rectY[2]=248.33333;
  rectW[2]=50.0;
  rectH[2]=68.33333;
  rectX[3]=488.3333;
  rectY[3]=326.66666;
  rectW[3]=13.3333435;
  rectH[3]=45.0;
  rectX[4]=498.3333;
  rectY[4]=376.66666;
  rectW[4]=-53.333344;
  rectH[4]=81.66666;
  rectX[5]=218.33333;
  rectY[5]=468.3333;
  rectW[5]=-30.0;
  rectH[5]=-36.666656;
  rectX[6]=206.66666;
  rectY[6]=403.3333;
  rectW[6]=28.333328;
  rectH[6]=-73.33331;
  rectX[7]=278.3333;
  rectY[7]=229.99998;
  rectW[7]=91.66669;
  rectH[7]=-44.999985;
  rectX[8]=478.3333;
  rectY[8]=153.33333;
  rectW[8]=51.666687;
  rectH[8]=-1.6666718;
  rectX[9]=628.3333;
  rectY[9]=190.0;
  rectW[9]=45.0;
  rectH[9]=78.33331;
  rectX[10]=671.6666;
  rectY[10]=363.3333;
  rectW[10]=-71.666626;
  rectH[10]=88.33334;
  rectX[11]=429.99997;
  rectY[11]=446.66666;
  rectW[11]=-161.66666;
  rectH[11]=-88.33334;
  rectX[12]=126.666664;
  rectY[12]=226.66666;
  rectW[12]=-61.666664;
  rectH[12]=-11.666672;
  rectX[13]=46.666664;
  rectY[13]=211.66666;
  rectW[13]=5.0;
  rectH[13]=1.6666718;
  vertexX[0][0]=394.99997;
  vertexY[0][0]=178.33333;
  vertexX[0][1]=414.99997;
  vertexY[0][1]=198.33333;
  vertexX[0][2]=181.66666;
  vertexY[0][2]=306.66666;
  vertexX[0][3]=199.99998;
  vertexY[0][3]=325.0;
  vertexX[0][4]=548.3333;
  vertexY[0][4]=335.0;
  vertexX[0][5]=409.99997;
  vertexY[0][5]=196.66666;
  vertexX[0][6]=346.66666;
  vertexY[0][6]=241.66666;
  vertexX[0][7]=286.66666;
  vertexY[0][7]=251.66666;
  vertexX[1][0]=161.66666;
  vertexY[1][0]=161.66666;
  vertexX[1][1]=238.33333;
  vertexY[1][1]=173.33333;
  vertexX[1][2]=391.66666;
  vertexY[1][2]=214.99998;
  vertexX[1][3]=345.0;
  vertexY[1][3]=323.3333;
  vertexX[1][4]=198.33333;
  vertexY[1][4]=281.66666;
  vertexX[1][5]=198.33333;
  vertexY[1][5]=253.33333;
  vertexX[2][0]=211.66666;
  vertexY[2][0]=156.66666;
  vertexX[2][1]=305.0;
  vertexY[2][1]=216.66666;
  vertexX[2][2]=283.3333;
  vertexY[2][2]=355.0;
  ellipX[1]=80.0;
  ellipY[1]=151.66666;
  ellipR1[1]=0.0;
  ellipR2[1]=1.6666718;
  ellipX[2]=206.66666;
  ellipY[2]=160.0;
  ellipR1[2]=91.66666;
  ellipR2[2]=48.33333;
  ellipX[3]=404.99997;
  ellipY[3]=276.66666;
  ellipR1[3]=61.666687;
  ellipR2[3]=73.33334;
  ellip
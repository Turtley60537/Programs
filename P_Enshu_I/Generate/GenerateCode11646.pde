float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=378.3333;
  pointY[0]=93.33333;
  pointX[1]=383.3333;
  pointY[1]=96.666664;
  pointX[2]=383.3333;
  pointY[2]=96.666664;
  pointX[3]=393.3333;
  pointY[3]=113.33333;
  pointX[4]=394.99997;
  pointY[4]=119.99999;
  pointX[5]=394.99997;
  pointY[5]=123.33333;
  pointX[6]=394.99997;
  pointY[6]=128.33333;
  pointX[7]=388.3333;
  pointY[7]=140.0;
  pointX[8]=376.66666;
  pointY[8]=151.66666;
  pointX[9]=355.0;
  pointY[9]=161.66666;
  pointX[10]=355.0;
  pointY[10]=161.66666;
  pointX[11]=283.3333;
  pointY[11]=160.0;
  pointX[12]=283.3333;
  pointY[12]=160.0;
  pointX[13]=256.66666;
  pointY[13]=146.66666;
  pointX[14]=251.66666;
  pointY[14]=136.66666;
  pointX[15]=249.99998;
  pointY[15]=126.666664;
  pointX[16]=251.66666;
  pointY[16]=119.99999;
  pointX[17]=261.66666;
  pointY[17]=111.666664;
  pointX[18]=276.66666;
  pointY[18]=104.99999;
  pointX[19]=300.0;
  pointY[19]=101.666664;
  pointX[20]=336.66666;
  pointY[20]=101.666664;
  pointX[21]=341.66666;
  pointY[21]=104.99999;
  pointX[22]=346.66666;
  pointY[22]=111.666664;
  pointX[23]=346.66666;
  pointY[23]=121.666664;
  pointX[24]=346.66666;
  pointY[24]=121.666664;
  pointX[25]=345.0;
  pointY[25]=136.66666;
  pointX[26]=340.0;
  pointY[26]=143.33333;
  pointX[27]=331.66666;
  pointY[27]=145.0;
  pointX[28]=331.66666;
  pointY[28]=145.0;
  pointX[29]=331.66666;
  pointY[29]=145.0;
  pointX[30]=296.66666;
  pointY[30]=143.33333;
  pointX[31]=296.66666;
  pointY[31]=143.33333;
  pointX[32]=290.0;
  pointY[32]=138.33333;
  pointX[33]=290.0;
  pointY[33]=133.33333;
  pointX[34]=295.0;
  pointY[34]=128.33333;
  pointX[35]=303.3333;
  pointY[35]=123.33333;
  pointX[36]=315.0;
  pointY[36]=121.666664;
  pointX[37]=323.3333;
  pointY[37]=121.666664;
  pointX[38]=330.0;
  pointY[38]=133.33333;
  pointX[39]=330.0;
  pointY[39]=136.66666;
  pointX[40]=328.3333;
  pointY[40]=140.0;
  pointX[41]=321.66666;
  pointY[41]=146.66666;
  pointX[42]=310.0;
  pointY[42]=148.33333;
  pointX[43]=300.0;
  pointY[43]=148.33333;
  pointX[44]=290.0;
  pointY[44]=145.0;
  pointX[45]=286.66666;
  pointY[45]=141.66666;
  pointX[46]=278.3333;
  pointY[46]=135.0;
  lineX1[0]=248.33333;
  lineY1[0]=143.33333;
  lineX2[0]=199.99998;
  lineY2[0]=251.66666;
  lineX1[1]=214.99998;
  lineY1[1]=236.66666;
  lineX2[1]=291.66666;
  lineY2[1]=265.0;
  lineX1[2]=393.3333;
  lineY1[2]=256.66666;
  lineX2[2]=404.99997;
  lineY2[2]=256.66666;
  lineX1[3]=499.99997;
  lineY1[3]=243.33333;
  lineX2[3]=513.3333;
  lineY2[3]=238.33333;
  lineX1[4]=494.99997;
  lineY1[4]=196.66666;
  lineX2[4]=474.99997;
  lineY2[4]=194.99998;
  lineX1[5]=386.66666;
  lineY1[5]=188.33333;
  lineX2[5]=330.0;
  lineY2[5]=209.99998;
  lineX1[6]=326.66666;
  lineY1[6]=218.33333;
  lineX2[6]=308.3333;
  lineY2[6]=236.66666;
  x[1]=209.99998;
  y[1]=165.0;
  w[1]=51.66667;
  h[1]=74.999985;
  x[2]=306.66666;
  y[2]=276.66666;
  w[2]=18.333344;
  h[2]=16.666656;
  x[3]=366.66666;
  y[3]=310.0;
  w[3]=35.0;
  h[3]=16.666656;
  x[4]=429.99997;
  y[4]=326.66666;
  w[4]=5.0;
  h[4]=-35.0;
  x[5]=429.99997;
  y[5]=224.99998;
  w[5]=0.0;
  h[5]=-15.0;
  x[6]=429.99997;
  y[6]=178.33333;
  w[6]=-106.66666;
  h[6]=-23.333328;
  x[7]=280.0;
  y[7]=155.0;
  w[7]=-25.000015;
  h[7]=5.0;
  x[8]=224.99998;
  y[8]=173.33333;
  w[8]=-20.0;
  h[8]=65.0;
  vertexX[0][0]=148.33333;
  vertexY[0][0]=158.33333;
  vertexX[0][0]=148.33333;
  vertexY[0][0]=158.33333;
  vertexX[0][0]=148.33333;
  vertexY[0][0]=158.33333;
  vertexX[0][0]=148.33333;
  vertexY[0][0]=158.33333;
  vertexX[0][0]=148.33333;
  vertexY[0][0]=158.33333;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[1][0]=270.0;
  vertexY[1][0]=241.66666;
  vertexX[2][0]=308.3333;
  vertexY[2][0]=340.0;
  vertexX[2][0]=308.3333;
  vertexY[2][0]=340.0;
  vertexX[2][0]=308.3333;
  vertexY[2][0]=340.0;
  vertexX[2][0]=308.3333;
  vertexY[2][0]=340.0;
  vertexX[2][0]=308.3333;
  vertexY[2][0]=340.0;
  vertexX[3][0]=71.666664;
  vertexY[3][0]=140.0;
  ellipX[0]=680.0;
  ellipY[0]=148.33333;
  ellipR1[0]=680.0;
  ellipR2[0]=156.66666;
  ellipX[1]=710.0;
  ellipY[1]=176.66666;
  ellipR1[1]=741.6666;
  ellipR2[1]=293.3333;
  ellipX[2]=613.3333;
  ellipY[2]=311.66666;
  ellipR1[2]=721.6666;
  ellipR2[2]=360.0;
  ellipX[3]=556.6666;
  ellipY[3]=350.0;
  ellipR1[3]=578.3333;
  ellipR2[3]=355.0;
  ellipX[4]=546.6666;
  ellipY[4]=305.0;
  ellipR1[4]=548.3333;
  ellipR2[4]=308.3333;
  ellipX[5]=526.6666;
  ellipY[5]=203.33333;
  ellipR1[5]=528.3333;
  ellipR2[5]=214.99998;
  ellipX[6]=608.3333;
  ellipY[6]=170.0;
  ellipR1[6]=690.0;
  ellipR2[6]=175.0;
  ellipX[7]=751.6666;
  ellipY[7]=178.33333;
  ellipR1[7]=773.3333;
  ellipR2[7]=183.33333;
  ellipX[8]=791.6666;
  ellipY[8]=186.66666;
  ellipR1[8]=833.3333;
  ellipR2[8]=270.0;
  ellipX[9]=773.3333;
  elli
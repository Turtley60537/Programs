float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[0][0]=176.66666;
  vertexY[0][0]=219.99998;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[1][0]=218.33333;
  vertexY[1][0]=320.0;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[2][0]=316.66666;
  vertexY[2][0]=371.66666;
  vertexX[3][0]=493.3333;
  vertexY[3][0]=396.66666;
  vertexX[3][0]=493.3333;
  vertexY[3][0]=396.66666;
  vertexFillFlag[0]=1;
  vertexFillFlag[1]=1;
  vertexFillFlag[2]=1;
  vertexFillFlag[3]=1;
  vertexFillFlag[1]=1;
  x[0]=261.66666;
  y[0]=93.33333;
  w[0]=151.66666;
  h[0]=156.66666;
  x[1]=596.6666;
  y[1]=236.66666;
  w[1]=-274.99997;
  h[1]=178.33331;
  vertexFillFlag[0]=1;
  vertexFillFlag[1]=1;
  vertexFillFlag[0]=1;
  vertexFillFlag[1]=1;
  rectFillFlag[0]=1;
  x[2]=216.66666;
  y[2]=111.666664;
  w[2]=148.33334;
  h[2]=198.33334;
  x[3]=281.66666;
  y[3]=116.666664;
  w[3]=100.0;
  h[3]=200.0;
  x[4]=303.3333;
  y[4]=66.666664;
  w[4]=260.0;
  h[4]=355.0;
  x[5]=303.3333;
  y[5]=135.0;
  w[5]=203.33334;
  h[5]=294.99997;
  x[6]=261.66666;
  y[6]=318.3333;
  w[6]=281.66666;
  h[6]=330.0;
  rectFillFlag[0]=1;
  rectFillFlag[1]=1;
  rectFillFlag[2]=1;
  rectFillFlag[3]=1;
  rectFillFlag[4]=1;
  rectFillFlag[5]=1;
  rectFillFlag[6]=1;
  vertexFillFlag[0]=1;
  vertexFillFlag[1]=1;
  vertexFillFlag[2]=1;
  vertexFillFlag[3]=1;
  pointX[0]=473.3333;
  pointY[0]=201.66666;
  pointX[1]=473.3333;
  pointY[1]=201.66666;
  pointX[2]=479.99997;
  pointY[2]=233.33333;
  pointX[3]=481.66666;
  pointY[3]=249.99998;
  pointX[4]=481.66666;
  pointY[4]=258.3333;
  pointX[5]=478.3333;
  pointY[5]=266.66666;
  pointX[6]=473.3333;
  pointY[6]=268.3333;
  pointX[7]=453.3333;
  pointY[7]=271.66666;
  pointX[8]=453.3333;
  pointY[8]=271.66666;
  pointX[9]=453.3333;
  pointY[9]=271.66666;
  pointX[10]=350.0;
  pointY[10]=224.99998;
  pointX[11]=346.66666;
  pointY[11]=140.0;
  pointX[12]=370.0;
  pointY[12]=108.33333;
  pointX[13]=418.3333;
  pointY[13]=88.33333;
  pointX[14]=438.3333;
  pointY[14]=85.0;
  pointX[15]=476.66666;
  pointY[15]=91.666664;
  pointX[16]=504.99997;
  pointY[16]=119.99999;
  pointX[17]=518.3333;
  pointY[17]=148.33333;
  pointX[18]=530.0;
  pointY[18]=186.66666;
  pointX[19]=531.6666;
  pointY[19]=221.66666;
  pointX[20]=531.6666;
  pointY[20]=243.33333;
  pointX[21]=531.6666;
  pointY[21]=246.66666;
  pointX[22]=531.6666;
  pointY[22]=244.99998;
  pointX[23]=536.6666;
  pointY[23]=236.66666;
  pointX[24]=575.0;
  pointY[24]=214.99998;
  pointX[25]=585.0;
  pointY[25]=213.33333;
  pointX[26]=603.3333;
  pointY[26]=214.99998;
  pointX[27]=611.6666;
  pointY[27]=223.33333;
  pointX[28]=611.6666;
  pointY[28]=241.66666;
  pointX[29]=595.0;
  pointY[29]=270.0;
  pointX[30]=578.3333;
  pointY[30]=285.0;
  pointX[31]=555.0;
  pointY[31]=298.3333;
  pointX[32]=545.0;
  pointY[32]=301.66666;
  pointX[33]=535.0;
  pointY[33]=303.3333;
  pointX[34]=533.3333;
  pointY[34]=300.0;
  pointX[35]=555.0;
  pointY[35]=280.0;
  pointX[36]=581.6666;
  pointY[36]=275.0;
  pointX[37]=596.6666;
  pointY[37]=275.0;
  pointX[38]=605.0;
  pointY[38]=281.66666;
  pointX[39]=608.3333;
  pointY[39]=296.66666;
  pointX[40]=603.3333;
  pointY[40]=326.66666;
  pointX[41]=596.6666;
  pointY[41]=343.3333;
  pointX[42]=581.6666;
  pointY[42]=358.3333;
  pointX[43]=573.3333;
  pointY[43]=365.0;
  pointX[44]=568.3333;
  pointY[44]=365.0;
  pointX[45]=578.3333;
  pointY[45]=341.66666;
  pointX[46]=608.3333;
  pointY[46]=318.3333;
  pointX[47]=661.6666;
  pointY[47]=300.0;
  pointX[48]=706.6666;
  pointY[48]=293.3333;
  pointX[49]=730.0;
  pointY[49]=295.0;
  pointX[50]=740.0;
  pointY[50]=311.66666;
  pointX[51]=740.0;
  pointY[51]=323.3333;
  pointX[52]=730.0;
  pointY[52]=351.66666;
  pointX[53]=701.6666;
  pointY[53]=370.0;
  pointX[54]=648.3333;
  pointY[54]=363.3333;
  pointX[55]=615.0;
  pointY[55]=343.3333;
  pointX[56]=496.66666;
  pointY[56]=208.33333;
  pointX[57]=469.99997;
  pointY[57]=136.66666;
  pointX[58]=474.99997;
  pointY[58]=73.33333;
  pointX[59]=498.3333;
  pointY[59]=29.999998;
  pointX[60]=498.3333;
  pointY[60]=29.999998;
  pointX[61]=531.6666;
  pointY[61]=14.999999;
  pointX[62]=533.3333;
  pointY[62]=21.666666;
  pointX[63]=535.0;
  pointY[63]=68.33333;
  pointX[64]=531.6666;
  pointY[64]=131.66666;
  pointX[65]=515.0;
  pointY[65]=196.66666;
  pointX[66]=499.99997;
  pointY[66]=233.33333;
  pointX[67]=491.66666;
  pointY[67]=249.99998;
  pointX[68]=493.3333;
  pointY[68]=248.33333;
  pointX[69]=503.3333;
  pointY[69]=239.99998;
  pointX[70]=520.0;
  pointY[70]=226.66666;
  pointX[71]=546.6666;
  pointY[71]=219.99998;
  pointX[72]=563.3333;
  pointY[72]=219.99998;
  pointX[73]=568.3333;
  pointY[73]=221.66666;
  pointX[74]=571.6666;
  pointY[74]=238.33333;
  pointX[75]=570.0;
  pointY[75]=271.66666;
  pointX[76]=558.3333;
  pointY[76]=306.66666;
  pointX[77]=540.0;
  pointY[77]=330.0;
  pointX[78]=509.99997;
  pointY[78]=353.3333;
  pointX[79]=501.66666;
  pointY[79]=355.0;
  pointX[80]=499.99997;
  pointY[80]=353.3333;
  pointX[81]=501.66666;
  pointY[81]=341.66666;
  pointX[82]=506.66666;
  pointY[82]=335.0;
  pointX[83]=520.0;
  pointY[83]=326.66666;
  pointX[84]=535.0;
  pointY[84]=328.3333;
  pointX[85]=541.6666;
  pointY[85]=336.66666;
  pointX[86]=546.6666;
  pointY[86]=360.0;
  pointX[87]=546.6666;
  pointY[87]=389.99997;
  pointX[88]=538.3333;
  pointY[88]=418.3333;
  pointX[89]=493.3333;
  pointY[89]=458.3333;
  pointX[90]=466.66666;
  pointY[90]=463.3333;
  pointX[91]=428.3333;
  pointY[91]=451.66666;
  pointX[92]=404.99997;
  pointY[92]=433.3333;
  pointX[93]=365.0;
  pointY[93]=384.99997;
  pointX[94]=350.0;
  pointY[94]=321.66666;
  pointX[95]=365.0;
  pointY[95]=253.33333;
  pointX[96]=381.66666;
  pointY[96]=224.99998;
  pointX[97]=406.66666;
  pointY[97]=198.33333;
  pointX[98]=418.3333;
  pointY[98]=196.66666;
  pointX[99]=423.3333;
  pointY[99]=199.99998;
  pointX[100]=444.99997;
  pointY[100]=301.66666;
  pointX[101]=461.66666;
  pointY[101]=391.66666;
  pointX[102]=469.99997;
  pointY[102]=476.66666;
  pointX[103]=474.99997;
  pointY[103]=530.0;
  pointX[104]=474.99997;
  pointY[104]=530.0;
  pointX[105]=474.99997;
  pointY[105]=538.3333;
  pointX[106]=474.99997;
  pointY[106]=535.0;
  pointX[107]=474.99997;
  pointY[107]=515.0;
  pointX[108]=479.99997;
  pointY[108]=486.66666;
  pointX[109]=489.99997;
  pointY[109]=464.99997;
  pointX[110]=496.66666;
  pointY[110]=453.3333;
  pointX[111]=496.66666;
  pointY[111]=453.3333;
  pointX[112]=515.0;
  pointY[112]=453.3333;
  pointX[113]=523.3333;
  pointY[113]=484.99997;
  pointX[114]=520.0;
  pointY[114]=499.99997;
  pointX[115]=511.66666;
  pointY[115]=503.3333;
  pointX[116]=468.3333;
  pointY[116]=504.99997;
  pointX[117]=404.99997;
  pointY[117]=491.66666;
  pointX[118]=341.66666;
  pointY[118]=469.99997;
  pointX[119]=293.3333;
  pointY[119]=439.99997;
  pointX[120]=270.0;
  pointY[120]=416.66666;
  pointX[121]=266.66666;
  pointY[121]=394.99997;
  pointX[122]=276.66666;
  pointY[122]=378.3333;
  pointX[123]=293.3333;
  pointY[123]=370.0;
  pointX[124]=301.66666;
  pointY[124]=371.66666;
  pointX[125]=301.66666;
  pointY[125]=383.3333;
  strokeFlag[0]=1;
  strokeFlag[1]=1;
  strokeFlag[2]=1;
  strokeFlag[3]=1;
  strokeFlag[4]=1;
  strokeFlag[5]=1;
  strokeFlag[6]=1;
  strokeFlag[7]=1;
  strokeFlag[8]=1;
  strokeFlag[9]=1;
  strokeFlag[10]=1;
  strokeFlag[11]=1;
  strokeFlag[16]=1;
  strokeFlag[56]=1;
  strokeFlag[57]=1;
  strokeFlag[66]=1;
  strokeFlag[67]=1;
  strokeFlag[68]=1;
  strokeFlag[69]=1;
  strokeFlag[78]=1;
  strokeFlag[79]=1;
  strokeFlag[80]=1;
  strokeFlag[81]=1;
  strokeFlag[82]=1;
  strokeFlag[92]=1;
  strokeFlag[93]=1;
  strokeFlag[94]=1;
  strokeFlag[95]=1;
  strokeFlag[96]=1;
  strokeFlag[97]=1;
  strokeFlag[98]=1;
  strokeFlag[99]=1;
  strokeFlag[100]=1;
  strokeFlag[101]=1;
  strokeFlag[119]=1;
  strokeFlag[120]=1;
  strokeFlag[121]=1;
  strokeFlag[122]=1;
  strokeFlag[123]=1;
  strokeFlag[124]=1;
  strokeFlag[125]=1;
  rectFillFlag[3]=1;
  rectFillFlag[5]=1;
  rectFillFlag[6]=1;
  vertexFillFlag[2]=1;
  vertexFillFlag[3]=1;
  strokeFlag[2]=1;
  strokeFlag[3]=1;
  strokeFlag[4]=1;
  strokeFlag[5]=1;
  strokeFlag[6]=1;
  strokeFlag[7]=1;
  strokeFlag[8]=1;
  strokeFlag[9]=1;
  strokeFlag[20]=1;
  strokeFlag[21]=1;
  strokeFlag[22]=1;
  strokeFlag[23]=1;
  strokeFlag[29]=1;
  strokeFlag[30]=1;
  strokeFlag[31]=1;
  strokeFlag[32]=1;
  strokeFlag[33]=1;
  strokeFlag[34]=1;
  strokeFlag[35]=1;
  strokeFlag[36]=1;
  strokeFlag[37]=1;
  strokeFlag[40]=1;
  strokeFlag[41]=1;
  strokeFlag[42]=1;
  strokeFlag[43]=1;
  strokeFlag[44]=1;
  strokeFlag[45]=1;
  strokeFlag[66]=1;
  strokeFlag[67]=1;
  strokeFlag[68]=1;
  strokeFlag[69]=1;
  strokeFlag[74]=1;
  strokeFlag[75]=1;
  strokeFlag[76]=1;
  strokeFlag[77]=1;
  strokeFlag[78]=1;
  strokeFlag[79]=1;
  strokeFlag[80]=1;
  strokeFlag[81]=1;
  strokeFlag[82]=1;
  strokeFlag[83]=1;
  strokeFlag[84]=1;
  strokeFlag[85]=1;
  strokeFlag[86]=1;
  strokeFlag[87]=1;
  strokeFlag[88]=1;
  strokeFlag[89]=1;
  strokeFlag[90]=1;
  strokeFlag[91]=1;
  strokeFlag[92]=1;
  strokeFlag[93]=1;
  strokeFlag[94]=1;
  strokeFlag[95]=1;
  strokeFlag[100]=1;
  strokeFlag[101]=1;
  strokeFlag[102]=1;
  strokeFlag[109]=1;
  strokeFlag[110]=1;
  strokeFlag[111]=1;
  strokeFlag[112]=1;
  strokeFlag[118]=1;
  strokeFlag[119]=1;
  strokeFlag[120]=1;
  strokeFlag[121]=1;
  strokeFlag[122]=1;
  strokeFlag[123]=1;
  strokeFlag[124]=1;
  strokeFlag[125]=1;
  rectFillFlag[1]=1;
  rectFillFlag[6]=1;
  vertexFillFlag[2]=1;
  vertexFillFlag[3]=1;
  strokeFlag[3]=1;
  strokeFlag[4]=1;
  strokeFlag[5]=1;
  strokeFlag[6]=1;
  strokeFlag[7]=1;
  strokeFlag[8]=1;
  strokeFlag[9]=1;
  strokeFlag[29]=1;
  strokeFlag[30]=1;
  strokeFlag[31]=1;
  strokeFlag[32]=1;
  strokeFlag[33]=1;
  strokeFlag[34]=1;
  strokeFlag[35]=1;
  strokeFlag[36]=1;
  strokeFlag[37]=1;
  strokeFlag[38]=1;
  strokeFlag[39]=1;
  strokeFlag[40]=1;
  strokeFlag[41]=1;
  strokeFlag[42]=1;
  strokeFlag[43]=1;
  strokeFlag[44]=1;
  strokeFlag[45]=1;
  strokeFlag[46]=1;
  strokeFlag[67]=1;
  strokeFlag[75]=1;
  strokeFlag[76]=1;
  strokeFlag[77]=1;
  strokeFlag[78]=1;
  strokeFlag[79]=1;
  strokeFlag[80]=1;
  strokeFlag[81]=1;
  strokeFlag[82]=1;
  strokeFlag[83]=1;
  strokeFlag[84]=1;
  strokeFlag[85]=1;
  strokeFlag[86]=1;
  strokeFlag[87]=1;
  strokeFlag[88]=1;
  strokeFlag[89]=1;
  strokeFlag[90]=1;
  strokeFlag[91]=1;
  strokeFlag[92]=1;
  strokeFlag[93]=1;
  strokeFlag[94]=1;
  strokeFlag[95]=1;
  strokeFlag[100]=1;
  strokeFlag[101]=1;
  strokeFlag[102]=1;
  strokeFlag[103]=1;
  strokeFlag[104]=1;
  strokeFlag[105]=1;
  strokeFlag[106]=1;
  strokeFlag[107]=1;
  strokeFlag[108]=1;
  strokeFlag[109]=1;
  strokeFlag[110]=1;
  strokeFlag[111]=1;
  strokeFlag[112]=1;
  strokeFlag[113]=1;
  strokeFlag[114]=1;
  strokeFlag[115]=1;
  strokeFlag[116]=1;
  strokeFlag[117]=1;
  strokeFlag[118]=1;
  strokeFlag[119]=1;
  strokeFlag[120]=1;
  strokeFlag[121]=1;
  strokeFlag[122]=1;
  strokeFlag[123]=1;
  strokeFlag[124]=1;
  strokeFlag[125]=1;
  rectFillFlag[6]=1;
  vertexFillFlag[2]=1;
  vertexFillFlag[3]=1;
  strokeFlag[0]=1;
  strokeFlag[1]=1;
  strokeFlag[2]=1;
  strokeFlag[3]=1;
  strokeFlag[4]=1;
  strokeFlag[5]=1;
  strokeFlag[6]=1;
  strokeFlag[7]=1;
  strokeFlag[8]=1;
  strokeFlag[9]=1;
  strokeFlag[10]=1;
  strokeFlag[11]=1;
  strokeFlag[12]=1;
  strokeFlag[13]=1;
  strokeFlag[14]=1;
  strokeFlag[15]=1;
  strokeFlag[16]=1;
  strokeFlag[17]=1;
  strokeFlag[18]=1;
  strokeFlag[19]=1;
  strokeFlag[20]=1;
  strokeFlag[21]=1;
  strokeFlag[22]=1;
  strokeFlag[23]=1;
  strokeFlag[24]=1;
  strokeFlag[25]=1;
  strokeFlag[26]=1;
  strokeFlag[27]=1;
  strokeFlag[28]=1;
  strokeFlag[29]=1;
  strokeFlag[30]=1;
  strokeFlag[31]=1;
  strokeFlag[32]=1;
  strokeFlag[33]=1;
  strokeFlag[34]=1;
  strokeFlag[35]=1;
  strokeFlag[36]=1;
  strokeFlag[37]=1;
  strokeFlag[38]=1;
  strokeFlag[39]=1;
  strokeFlag[40]=1;
  strokeFlag[41]=1;
  strokeFlag[42]=1;
  strokeFlag[43]=1;
  strokeFlag[44]=1;
  strokeFlag[45]=1;
  strokeFlag[46]=1;
  strokeFlag[55]=1;
  strokeFlag[56]=1;
  strokeFlag[57]=1;
  strokeFlag[58]=1;
  strokeFlag[59]=1;
  strokeFlag[60]=1;
  strokeFlag[61]=1;
  
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=483.3333;
  pointY[0]=203.33333;
  pointX[1]=484.99997;
  pointY[1]=204.99998;
  pointX[2]=484.99997;
  pointY[2]=208.33333;
  pointX[3]=484.99997;
  pointY[3]=209.99998;
  pointX[4]=483.3333;
  pointY[4]=214.99998;
  pointX[5]=481.66666;
  pointY[5]=218.33333;
  pointX[6]=478.3333;
  pointY[6]=224.99998;
  pointX[7]=469.99997;
  pointY[7]=231.66666;
  pointX[8]=461.66666;
  pointY[8]=238.33333;
  pointX[9]=441.66666;
  pointY[9]=246.66666;
  pointX[10]=414.99997;
  pointY[10]=251.66666;
  pointX[11]=384.99997;
  pointY[11]=253.33333;
  pointX[12]=361.66666;
  pointY[12]=253.33333;
  pointX[13]=345.0;
  pointY[13]=248.33333;
  pointX[14]=345.0;
  pointY[14]=248.33333;
  pointX[15]=341.66666;
  pointY[15]=203.33333;
  pointX[16]=353.3333;
  pointY[16]=185.0;
  pointX[17]=366.66666;
  pointY[17]=173.33333;
  pointX[18]=376.66666;
  pointY[18]=166.66666;
  pointX[19]=380.0;
  pointY[19]=166.66666;
  pointX[20]=383.3333;
  pointY[20]=166.66666;
  pointX[21]=383.3333;
  pointY[21]=176.66666;
  pointX[22]=381.66666;
  pointY[22]=193.33333;
  pointX[23]=375.0;
  pointY[23]=203.33333;
  pointX[24]=366.66666;
  pointY[24]=209.99998;
  pointX[25]=353.3333;
  pointY[25]=213.33333;
  pointX[26]=353.3333;
  pointY[26]=213.33333;
  pointX[27]=336.66666;
  pointY[27]=208.33333;
  pointX[28]=336.66666;
  pointY[28]=208.33333;
  pointX[29]=356.66666;
  pointY[29]=188.33333;
  pointX[30]=375.0;
  pointY[30]=180.0;
  pointX[31]=391.66666;
  pointY[31]=180.0;
  pointX[32]=403.3333;
  pointY[32]=185.0;
  pointX[33]=408.3333;
  pointY[33]=194.99998;
  pointX[34]=408.3333;
  pointY[34]=206.66666;
  pointX[35]=404.99997;
  pointY[35]=214.99998;
  pointX[36]=396.66666;
  pointY[36]=219.99998;
  pointX[37]=396.66666;
  pointY[37]=219.99998;
  pointX[38]=378.3333;
  pointY[38]=214.99998;
  pointX[39]=371.66666;
  pointY[39]=206.66666;
  pointX[40]=370.0;
  pointY[40]=199.99998;
  pointX[41]=371.66666;
  pointY[41]=194.99998;
  pointX[42]=376.66666;
  pointY[42]=193.33333;
  pointX[43]=394.99997;
  pointY[43]=196.66666;
  pointX[44]=418.3333;
  pointY[44]=213.33333;
  pointX[45]=418.3333;
  pointY[45]=213.33333;
  pointX[46]=434.99997;
  pointY[46]=251.66666;
  pointX[47]=434.99997;
  pointY[47]=251.66666;
  pointX[48]=434.99997;
  pointY[48]=251.66666;
  pointX[49]=434.99997;
  pointY[49]=251.66666;
  pointX[50]=434.99997;
  pointY[50]=251.66666;
  pointX[51]=434.99997;
  pointY[51]=251.66666;
  pointX[52]=346.66666;
  pointY[52]=190.0;
  pointX[53]=346.66666;
  pointY[53]=186.66666;
  pointX[54]=353.3333;
  pointY[54]=186.66666;
  pointX[55]=366.66666;
  pointY[55]=196.66666;
  pointX[56]=378.3333;
  pointY[56]=214.99998;
  pointX[57]=378.3333;
  pointY[57]=218.33333;
  pointX[58]=356.66666;
  pointY[58]=223.33333;
  pointX[59]=308.3333;
  pointY[59]=216.66666;
  pointX[60]=308.3333;
  pointY[60]=216.66666;
  pointX[61]=214.99998;
  pointY[61]=176.66666;
  pointX[62]=214.99998;
  pointY[62]=176.66666;
  pointX[63]=190.0;
  pointY[63]=143.33333;
  pointX[64]=190.0;
  pointY[64]=143.33333;
  pointX[65]=229.99998;
  pointY[65]=126.666664;
  pointX[66]=244.99998;
  pointY[66]=131.66666;
  pointX[67]=253.33333;
  pointY[67]=141.66666;
  pointX[68]=256.66666;
  pointY[68]=148.33333;
  pointX[69]=260.0;
  pointY[69]=161.66666;
  pointX[70]=260.0;
  pointY[70]=171.66666;
  pointX[71]=256.66666;
  pointY[71]=175.0;
  pointX[72]=251.66666;
  pointY[72]=173.33333;
  pointX[73]=251.66666;
  pointY[73]=171.66666;
  pointX[74]=251.66666;
  pointY[74]=166.66666;
  pointX[75]=254.99998;
  pointY[75]=161.66666;
  pointX[76]=261.66666;
  pointY[76]=155.0;
  ellipX[1]=218.33333;
  ellipY[1]=218.33333;
  ellipR1[1]=59.999985;
  ellipR2[1]=71.66667;
  ellipX[2]=323.3333;
  ellipY[2]=328.3333;
  ellipR1[2]=75.0;
  ellipR2[2]=78.33334;
  ellipX[4]=461.66666;
  ellipY[4]=433.3333;
  ellipR1[4]=-80.0;
  ellipR2[4]=-78.33331;
  ellipX[5]=368.3333;
  ellipY[5]=348.3333;
  ellipR1[5]=0.0;
  ellipR2[5]=0.0;
  ellipX[6]=286.66666;
  ellipY[6]=323.3333;
  ellipR1[6]=-18.333344;
  ellipR2[6]=-8.333313;
  ellipX[7]=224.99998;
  ellipY[7]=300.0;
  ellipR1[7]=-11.6666565;
  ellipR2[7]=-1.666687;
  ellipX[8]=99.99999;
  ellipY[8]=399.99997;
  ellipR1[8]=45.000008;
  ellipR2[8]=-53.333313;
  ellipX[9]=198.33333;
  ellipY[9]=318.3333;
  ellipR1[9]=26.666656;
  ellipR2[9]=-30.0;
  ellipX[10]=283.3333;
  ellipY[10]=244.99998;
  ellipR1[10]=80.0;
  ellipR2[10]=-45.0;
  ellipX[11]=388.3333;
  ellipY[11]=190.0;
  ellipR1[11]=10.0;
  ellipR2[11]=-3.3333435;
  ellipX[12]=668.3333;
  ellipY[12]=234.99998;
  ellipR1[12]=-10.0;
  ellipR2[12]=20.0;
  ellipX[13]=618.3333;
  ellipY[13]=288.3333;
  ellipR1[13]=-38.333313;
  ellipR2[13]=26.666687;
  ellipX[14]=570.0;
  ellipY[14]=320.0;
  ellipR1[14]=-51.666687;
  ellipR2[14]=23.333313;
  ellipX[15]=483.3333;
  ellipY[15]=365.0;
  ellipR1[15]=-46.666656;
  ellipR2[15]=18.333313;
  moveFlag[0]=1;
  moveFlag[4]=1;
  moveFlag[5]=1;
  moveFlag[6]=1;
  moveFlag[7]=1;
  moveFlag[8]=1;
  moveFlag[9]=1;
  
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=260.0;
  pointY[0]=91.666664;
  pointX[1]=261.66666;
  pointY[1]=95.0;
  pointX[2]=261.66666;
  pointY[2]=108.33333;
  pointX[3]=263.3333;
  pointY[3]=118.33333;
  pointX[4]=263.3333;
  pointY[4]=133.33333;
  pointX[5]=261.66666;
  pointY[5]=146.66666;
  pointX[6]=261.66666;
  pointY[6]=146.66666;
  pointX[7]=241.66666;
  pointY[7]=190.0;
  pointX[8]=224.99998;
  pointY[8]=208.33333;
  pointX[9]=224.99998;
  pointY[9]=208.33333;
  pointX[10]=196.66666;
  pointY[10]=216.66666;
  pointX[11]=196.66666;
  pointY[11]=216.66666;
  pointX[12]=196.66666;
  pointY[12]=216.66666;
  pointX[13]=196.66666;
  pointY[13]=216.66666;
  pointX[14]=196.66666;
  pointY[14]=216.66666;
  pointX[15]=196.66666;
  pointY[15]=216.66666;
  pointX[16]=196.66666;
  pointY[16]=216.66666;
  pointX[17]=196.66666;
  pointY[17]=216.66666;
  pointX[18]=196.66666;
  pointY[18]=216.66666;
  pointX[19]=399.99997;
  pointY[19]=160.0;
  pointX[20]=399.99997;
  pointY[20]=160.0;
  pointX[21]=416.66666;
  pointY[21]=173.33333;
  pointX[22]=414.99997;
  pointY[22]=181.66666;
  pointX[23]=414.99997;
  pointY[23]=181.66666;
  pointX[24]=376.66666;
  pointY[24]=198.33333;
  pointX[25]=348.3333;
  pointY[25]=198.33333;
  pointX[26]=328.3333;
  pointY[26]=191.66666;
  pointX[27]=325.0;
  pointY[27]=188.33333;
  pointX[28]=321.66666;
  pointY[28]=176.66666;
  pointX[29]=325.0;
  pointY[29]=170.0;
  pointX[30]=325.0;
  pointY[30]=170.0;
  pointX[31]=348.3333;
  pointY[31]=163.33333;
  pointX[32]=353.3333;
  pointY[32]=166.66666;
  pointX[33]=353.3333;
  pointY[33]=171.66666;
  pointX[34]=351.66666;
  pointY[34]=181.66666;
  pointX[35]=335.0;
  pointY[35]=190.0;
  pointX[36]=325.0;
  pointY[36]=193.33333;
  pointX[37]=295.0;
  pointY[37]=193.33333;
  pointX[38]=260.0;
  pointY[38]=176.66666;
  pointX[39]=251.66666;
  pointY[39]=166.66666;
  pointX[40]=249.99998;
  pointY[40]=148.33333;
  pointX[41]=251.66666;
  pointY[41]=138.33333;
  pointX[42]=270.0;
  pointY[42]=131.66666;
  pointX[43]=300.0;
  pointY[43]=136.66666;
  pointX[44]=325.0;
  pointY[44]=145.0;
  pointX[45]=346.66666;
  pointY[45]=160.0;
  pointX[46]=346.66666;
  pointY[46]=160.0;
  pointX[47]=361.66666;
  pointY[47]=186.66666;
  pointX[48]=360.0;
  pointY[48]=194.99998;
  pointX[49]=346.66666;
  pointY[49]=198.33333;
  pointX[50]=335.0;
  pointY[50]=199.99998;
  pointX[51]=335.0;
  pointY[51]=199.99998;
  pointX[52]=320.0;
  pointY[52]=196.66666;
  pointX[53]=320.0;
  pointY[53]=196.66666;
  pointX[54]=315.0;
  pointY[54]=188.33333;
  pointX[55]=315.0;
  pointY[55]=180.0;
  pointX[56]=325.0;
  pointY[56]=166.66666;
  pointX[57]=335.0;
  pointY[57]=160.0;
  pointX[58]=335.0;
  pointY[58]=160.0;
  pointX[59]=358.3333;
  pointY[59]=155.0;
  pointX[60]=358.3333;
  pointY[60]=155.0;
  pointX[61]=383.3333;
  pointY[61]=160.0;
  pointX[62]=396.66666;
  pointY[62]=166.66666;
  pointX[63]=403.3333;
  pointY[63]=171.66666;
  pointX[64]=411.66666;
  pointY[64]=181.66666;
  pointX[65]=413.3333;
  pointY[65]=198.33333;
  pointX[66]=413.3333;
  pointY[66]=206.66666;
  pointX[67]=408.3333;
  pointY[67]=213.33333;
  pointX[68]=398.3333;
  pointY[68]=219.99998;
  pointX[69]=378.3333;
  pointY[69]=224.99998;
  pointX[70]=365.0;
  pointY[70]=226.66666;
  pointX[71]=338.3333;
  pointY[71]=226.66666;
  pointX[72]=298.3333;
  pointY[72]=218.33333;
  pointX[73]=254.99998;
  pointY[73]=204.99998;
  pointX[74]=236.66666;
  pointY[74]=196.66666;
  pointX[75]=236.66666;
  pointY[75]=196.66666;
  pointX[76]=186.66666;
  pointY[76]=163.33333;
  pointX[77]=186.66666;
  pointY[77]=156.66666;
  pointX[78]=201.66666;
  pointY[78]=143.33333;
  pointX[79]=224.99998;
  pointY[79]=130.0;
  pointX[80]=268.3333;
  pointY[80]=121.666664;
  pointX[81]=268.3333;
  pointY[81]=121.666664;
  pointX[82]=361.66666;
  pointY[82]=118.33333;
  pointX[83]=466.66666;
  pointY[83]=126.666664;
  pointX[84]=466.66666;
  pointY[84]=126.666664;
  pointX[85]=494.99997;
  pointY[85]=140.0;
  pointX[86]=494.99997;
  pointY[86]=140.0;
  pointX[87]=466.66666;
  pointY[87]=165.0;
  pointX[88]=466.66666;
  pointY[88]=165.0;
  pointX[89]=321.66666;
  pointY[89]=194.99998;
  pointX[90]=244.99998;
  pointY[90]=198.33333;
  pointX[91]=244.99998;
  pointY[91]=198.33333;
  pointX[92]=168.33333;
  pointY[92]=194.99998;
  pointX[93]=170.0;
  pointY[93]=188.33333;
  pointX[94]=199.99998;
  pointY[94]=175.0;
  pointX[95]=256.66666;
  pointY[95]=168.33333;
  pointX[96]=256.66666;
  pointY[96]=168.33333;
  pointX[97]=381.66666;
  pointY[97]=181.66666;
  pointX[98]=403.3333;
  pointY[98]=198.33333;
  pointX[99]=403.3333;
  pointY[99]=198.33333;
  pointX[100]=403.3333;
  pointY[100]=198.33333;
  pointX[101]=384.99997;
  pointY[101]=218.33333;
  pointX[102]=321.66666;
  pointY[102]=216.66666;
  pointX[103]=303.3333;
  pointY[103]=209.99998;
  pointX[104]=298.3333;
  pointY[104]=201.66666;
  pointX[105]=306.66666;
  pointY[105]=191.66666;
  pointX[106]=306.66666;
  pointY[106]=191.66666;
  pointX[107]=358.3333;
  pointY[107]=173.33333
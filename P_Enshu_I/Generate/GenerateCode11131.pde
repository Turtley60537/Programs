float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=188.33333;
  pointY[0]=146.66666;
  pointX[1]=193.33333;
  pointY[1]=155.0;
  pointX[2]=199.99998;
  pointY[2]=171.66666;
  pointX[3]=201.66666;
  pointY[3]=176.66666;
  pointX[4]=201.66666;
  pointY[4]=178.33333;
  pointX[5]=201.66666;
  pointY[5]=181.66666;
  pointX[6]=201.66666;
  pointY[6]=181.66666;
  pointX[7]=190.0;
  pointY[7]=190.0;
  pointX[8]=178.33333;
  pointY[8]=193.33333;
  pointX[9]=163.33333;
  pointY[9]=194.99998;
  pointX[10]=163.33333;
  pointY[10]=194.99998;
  pointX[11]=135.0;
  pointY[11]=185.0;
  pointX[12]=116.666664;
  pointY[12]=178.33333;
  pointX[13]=111.666664;
  pointY[13]=173.33333;
  pointX[14]=111.666664;
  pointY[14]=173.33333;
  pointX[15]=113.33333;
  pointY[15]=160.0;
  pointX[16]=113.33333;
  pointY[16]=160.0;
  pointX[17]=113.33333;
  pointY[17]=160.0;
  pointX[18]=173.33333;
  pointY[18]=141.66666;
  pointX[19]=173.33333;
  pointY[19]=141.66666;
  pointX[20]=173.33333;
  pointY[20]=141.66666;
  pointX[21]=173.33333;
  pointY[21]=141.66666;
  pointX[22]=173.33333;
  pointY[22]=141.66666;
  pointX[23]=315.0;
  pointY[23]=185.0;
  pointX[24]=308.3333;
  pointY[24]=199.99998;
  pointX[25]=305.0;
  pointY[25]=204.99998;
  pointX[26]=305.0;
  pointY[26]=204.99998;
  pointX[27]=290.0;
  pointY[27]=211.66666;
  pointX[28]=283.3333;
  pointY[28]=209.99998;
  pointX[29]=283.3333;
  pointY[29]=208.33333;
  pointX[30]=286.66666;
  pointY[30]=203.33333;
  pointX[31]=295.0;
  pointY[31]=203.33333;
  pointX[32]=306.66666;
  pointY[32]=201.66666;
  pointX[33]=321.66666;
  pointY[33]=203.33333;
  pointX[34]=333.3333;
  pointY[34]=209.99998;
  pointX[35]=336.66666;
  pointY[35]=214.99998;
  pointX[36]=336.66666;
  pointY[36]=214.99998;
  pointX[37]=328.3333;
  pointY[37]=223.33333;
  pointX[38]=308.3333;
  pointY[38]=223.33333;
  pointX[39]=271.66666;
  pointY[39]=209.99998;
  pointX[40]=263.3333;
  pointY[40]=206.66666;
  pointX[41]=254.99998;
  pointY[41]=196.66666;
  pointX[42]=254.99998;
  pointY[42]=188.33333;
  pointX[43]=254.99998;
  pointY[43]=188.33333;
  pointX[44]=281.66666;
  pointY[44]=180.0;
  pointX[45]=295.0;
  pointY[45]=180.0;
  pointX[46]=301.66666;
  pointY[46]=181.66666;
  pointX[47]=303.3333;
  pointY[47]=185.0;
  pointX[48]=303.3333;
  pointY[48]=188.33333;
  pointX[49]=286.66666;
  pointY[49]=193.33333;
  pointX[50]=266.66666;
  pointY[50]=193.33333;
  pointX[51]=266.66666;
  pointY[51]=193.33333;
  pointX[52]=241.66666;
  pointY[52]=185.0;
  pointX[53]=239.99998;
  pointY[53]=176.66666;
  pointX[54]=246.66666;
  pointY[54]=168.33333;
  pointX[55]=263.3333;
  pointY[55]=160.0;
  pointX[56]=285.0;
  pointY[56]=153.33333;
  pointX[57]=308.3333;
  pointY[57]=151.66666;
  pointX[58]=333.3333;
  pointY[58]=155.0;
  pointX[59]=341.66666;
  pointY[59]=161.66666;
  pointX[60]=343.3333;
  pointY[60]=165.0;
  pointX[61]=343.3333;
  pointY[61]=165.0;
  pointX[62]=343.3333;
  pointY[62]=181.66666;
  pointX[63]=336.66666;
  pointY[63]=188.33333;
  pointX[64]=326.66666;
  pointY[64]=191.66666;
  pointX[65]=326.66666;
  pointY[65]=191.66666;
  pointX[66]=310.0;
  pointY[66]=196.66666;
  pointX[67]=298.3333;
  pointY[67]=194.99998;
  pointX[68]=288.3333;
  pointY[68]=190.0;
  pointX[69]=278.3333;
  pointY[69]=176.66666;
  pointX[70]=273.3333;
  pointY[70]=166.66666;
  pointX[71]=271.66666;
  pointY[71]=153.33333;
  pointX[72]=273.3333;
  pointY[72]=140.0;
  pointX[73]=280.0;
  pointY[73]=131.66666;
  pointX[74]=283.3333;
  pointY[74]=130.0;
  pointX[75]=293.3333;
  pointY[75]=124.99999;
  pointX[76]=293.3333;
  pointY[76]=124.99999;
  pointX[77]=336.66666;
  pointY[77]=119.99999;
  pointX[78]=348.3333;
  pointY[78]=119.99999;
  pointX[79]=358.3333;
  pointY[79]=126.666664;
  pointX[80]=366.66666;
  pointY[80]=131.66666;
  pointX[81]=375.0;
  pointY[81]=136.66666;
  pointX[82]=380.0;
  pointY[82]=141.66666;
  pointX[83]=386.66666;
  pointY[83]=148.33333;
  pointX[84]=388.3333;
  pointY[84]=155.0;
  pointX[85]=389.99997;
  pointY[85]=161.66666;
  pointX[86]=389.99997;
  pointY[86]=173.33333;
  pointX[87]=386.66666;
  pointY[87]=183.33333;
  pointX[88]=384.99997;
  pointY[88]=185.0;
  pointX[89]=381.66666;
  pointY[89]=190.0;
  pointX[90]=373.3333;
  pointY[90]=196.66666;
  pointX[91]=373.3333;
  pointY[91]=196.66666;
  pointX[92]=355.0;
  pointY[92]=208.33333;
  pointX[93]=345.0;
  pointY[93]=213.33333;
  pointX[94]=331.66666;
  pointY[94]=216.66666;
  pointX[95]=315.0;
  pointY[95]=218.33333;
  pointX[96]=315.0;
  pointY[96]=218.33333;
  pointX[97]=283.3333;
  pointY[97]=211.66666;
  pointX[98]=268.3333;
  pointY[98]=204.99998;
  pointX[99]=260.0;
  pointY[99]=199.99998;
  pointX[100]=254.99998;
  pointY[100]=194.99998;
  pointX[101]=253.33333;
  pointY[101]=185.0;
  pointX[102]=253.33333;
  pointY[102]=175.0;
  pointX[103]=253.33333;
  pointY[103]=175.0;
  pointX[104]=273.3333;
  pointY[104]=146.66666;
  pointX[105]=273.3333;
  pointY[105]=146.66666;
  pointX[106]=358.3333;
  pointY[106]=123.33333;
  pointX[107]=393.3333;
  pointY[107]=124.
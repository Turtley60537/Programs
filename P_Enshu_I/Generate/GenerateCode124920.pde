float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=316.66666;
  pointY[0]=256.66666;
  pointX[1]=396.66666;
  pointY[1]=336.66666;
  pointX[2]=419.99997;
  pointY[2]=365.0;
  pointX[3]=439.99997;
  pointY[3]=393.3333;
  pointX[4]=439.99997;
  pointY[4]=404.99997;
  pointX[5]=428.3333;
  pointY[5]=406.66666;
  pointX[6]=411.66666;
  pointY[6]=401.66666;
  pointX[7]=398.3333;
  pointY[7]=384.99997;
  pointX[8]=386.66666;
  pointY[8]=355.0;
  pointX[9]=384.99997;
  pointY[9]=316.66666;
  pointX[10]=408.3333;
  pointY[10]=265.0;
  pointX[11]=414.99997;
  pointY[11]=256.66666;
  pointX[12]=419.99997;
  pointY[12]=249.99998;
  pointX[13]=409.99997;
  pointY[13]=251.66666;
  pointX[14]=378.3333;
  pointY[14]=256.66666;
  pointX[15]=320.0;
  pointY[15]=256.66666;
  pointX[16]=281.66666;
  pointY[16]=249.99998;
  pointX[17]=270.0;
  pointY[17]=239.99998;
  pointX[18]=271.66666;
  pointY[18]=233.33333;
  pointX[19]=290.0;
  pointY[19]=216.66666;
  pointX[20]=318.3333;
  pointY[20]=209.99998;
  pointX[21]=331.66666;
  pointY[21]=209.99998;
  pointX[22]=330.0;
  pointY[22]=211.66666;
  pointX[23]=286.66666;
  pointY[23]=218.33333;
  pointX[24]=241.66666;
  pointY[24]=213.33333;
  pointX[25]=216.66666;
  pointY[25]=203.33333;
  pointX[26]=211.66666;
  pointY[26]=186.66666;
  pointX[27]=233.33333;
  pointY[27]=170.0;
  pointX[28]=301.66666;
  pointY[28]=161.66666;
  pointX[29]=381.66666;
  pointY[29]=176.66666;
  pointX[30]=408.3333;
  pointY[30]=188.33333;
  pointX[31]=424.99997;
  pointY[31]=209.99998;
  pointX[32]=418.3333;
  pointY[32]=224.99998;
  pointX[33]=406.66666;
  pointY[33]=229.99998;
  lineX1[1]=321.66666;
  lineY1[1]=119.99999;
  lineX2[1]=403.3333;
  lineY2[1]=158.33333;
  lineX1[2]=481.66666;
  lineY1[2]=203.33333;
  lineX2[2]=526.6666;
  lineY2[2]=234.99998;
  lineX1[3]=540.0;
  lineY1[3]=254.99998;
  lineX2[3]=536.6666;
  lineY2[3]=325.0;
  lineX1[4]=473.3333;
  lineY1[4]=338.3333;
  lineX2[4]=348.3333;
  lineY2[4]=363.3333;
  lineX1[5]=271.66666;
  lineY1[5]=366.66666;
  lineX2[5]=188.33333;
  lineY2[5]=386.66666;
  lineX1[6]=153.33333;
  lineY1[6]=383.3333;
  lineX2[6]=439.99997;
  lineY2[6]=14.999999;
  lineX1[7]=494.99997;
  lineY1[7]=20.0;
  lineX2[7]=526.6666;
  lineY2[7]=63.333332;
  lineX1[8]=666.6666;
  lineY1[8]=191.66666;
  lineX2[8]=683.3333;
  lineY2[8]=251.66666;
  lineX1[9]=688.3333;
  lineY1[9]=308.3333;
  lineX2[9]=596.6666;
  lineY2[9]=414.99997;
  lineX1[10]=256.66666;
  lineY1[10]=428.3333;
  lineX2[10]=133.33333;
  lineY2[10]=393.3333;
  lineX1[11]=54.999996;
  lineY1[11]=218.33333;
  lineX2[11]=36.666664;
  lineY2[11]=188.33333;
  ellipX[0]=49.999996;
  ellipY[0]=160.0;
  ellipR1[0]=91.66666;
  ellipR2[0]=59.999985;
  ellipX[1]=219.99998;
  ellipY[1]=248.33333;
  ellipR1[1]=90.000015;
  ellipR2[1]=49.999985;
  ellipX[2]=341.66666;
  ellipY[2]=306.66666;
  ellipR1[2]=78.33331;
  ellipR2[2]=105.0;
  ellipX[3]=296.66666;
  ellipY[3]=150.0;
  ellipR1[3]=0.0;
  ellipR2[3]=5.0;
  ellipX[4]=434.99997;
  ellipY[4]=323.3333;
  ellipR1[4]=43.333344;
  ellipR2[4]=71.66666;
  ellipX[5]=488.3333;
  ellipY[5]=429.99997;
  ellipR1[5]=-180.0;
  ellipR2[5]=3.3333435;
  ellipX[6]=151.66666;
  ellipY[6]=428.3333;
  ellipR1[6]=25.0;
  ellipR2[6]=-33.333344;
  ellipX[7]=286.66666;
  ellipY[7]=275.0;
  ellipR1[7]=70.0;
  ellipR2[7]=-15.0;
  ellipX[8]=501.66666;
  ellipY[8]=228.33333;
  ellipR1[8]=49.99997;
  ellipR2[8]=0.0;
  ellipX[9]=635.0;
  ellipY[9]=271.66666;
  ellipR1[9]=23.333313;
  ellipR2[9]=203.33331;
  ellipX[10]=503.3333;
  ellipY[10]=479.99997;
  ellipR1[10]=-228.33331;
  ellipR2[10]=-3.333313;
  rectX[1]=291.66666;
  rectY[1]=165.0;
  rectW[1]=40.0;
  rectH[1]=25.0;
  rectX[2]=365.0;
  rectY[2]=244.99998;
  rectW[2]=36.666656;
  rectH[2]=50.000015;
  rectX[3]=434.99997;
  rectY[3]=343.3333;
  rectW[3]=10.0;
  rectH[3]=18.333344;
  rectX[4]=501.66666;
  rectY[4]=389.99997;
  rectW[4]=38.333344;
  rectH[4]=30.0;
  rectX[5]=561.6666;
  rectY[5]=428.3333;
  rectW[5]=1.666687;
  rectH[5]=13.3333435;
  rectX[6]=595.0;
  rectY[6]=484.99997;
  rectW[6]=-16.666687;
  rectH[6]=5.0;
  rectX[7]=451.66666;
  rectY[7]=438.3333;
  rectW[7]=-38.333344;
  rectH[7]=-16.666656;
  rectX[8]=336.66666;
  rectY[8]=353.3333;
  rectW[8]=-23.333344;
  rectH[8]=-16.666656;
  rectX[9]=273.3333;
  rectY[9]=311.66666;
  rectW[9]=-18.333328;
  rectH[9]=-11.6666565;
  rectX[10]=188.33333;
  rectY[10]=249.99998;
  rectW[10]=-20.0;
  rectH[10]=20.000015;
  rectX[11]=138.33333;
  rectY[11]=340.0;
  rectW[11]=-5.0;
  rectH[11]=30.0;
  rectX[12]=145.0;
  rectY[12]=381.66666;
  rectW[12]=1.6666565;
  rectH[12]=20.0;
  rectX[13]=141.66666;
  rectY[13]=421.66666;
  rectW[13]=-8.333328;
  rectH[13]=50.0;
  rectX[14]=133.33333;
  rectY[14]=484.99997;
  rectW[14]=0.0;
  rectH[14]=1.666687;
  rectX[15]=151.66666;
  rectY[15]=474.99997;
  rectW[15]=61.66667;
  rectH[15]=-23.333313;
  rectX[16]=285.0;
  rectY[16]=401.66666;
  rectW[16]=63.333313;
  rectH[16]=-38.333344;
  rectX[17]=489.99997;
  rectY[17]=268.3333;
  rectW[17]=43.333344;
  rectH[1
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=121.666664;
  pointY[0]=35.0;
  pointX[1]=150.0;
  pointY[1]=43.333332;
  pointX[2]=161.66666;
  pointY[2]=46.666664;
  pointX[3]=181.66666;
  pointY[3]=58.333332;
  pointX[4]=194.99998;
  pointY[4]=66.666664;
  pointX[5]=206.66666;
  pointY[5]=83.33333;
  pointX[6]=213.33333;
  pointY[6]=95.0;
  pointX[7]=213.33333;
  pointY[7]=95.0;
  pointX[8]=219.99998;
  pointY[8]=114.99999;
  pointX[9]=219.99998;
  pointY[9]=121.666664;
  pointX[10]=219.99998;
  pointY[10]=130.0;
  pointX[11]=219.99998;
  pointY[11]=130.0;
  pointX[12]=218.33333;
  pointY[12]=141.66666;
  pointX[13]=216.66666;
  pointY[13]=146.66666;
  pointX[14]=213.33333;
  pointY[14]=146.66666;
  pointX[15]=208.33333;
  pointY[15]=146.66666;
  pointX[16]=204.99998;
  pointY[16]=146.66666;
  pointX[17]=203.33333;
  pointY[17]=146.66666;
  pointX[18]=203.33333;
  pointY[18]=143.33333;
  pointX[19]=203.33333;
  pointY[19]=140.0;
  pointX[20]=203.33333;
  pointY[20]=131.66666;
  pointX[21]=208.33333;
  pointY[21]=123.33333;
  pointX[22]=208.33333;
  pointY[22]=123.33333;
  pointX[23]=226.66666;
  pointY[23]=104.99999;
  pointX[24]=246.66666;
  pointY[24]=98.33333;
  pointX[25]=246.66666;
  pointY[25]=98.33333;
  pointX[26]=310.0;
  pointY[26]=99.99999;
  pointX[27]=310.0;
  pointY[27]=99.99999;
  pointX[28]=310.0;
  pointY[28]=99.99999;
  pointX[29]=335.0;
  pointY[29]=138.33333;
  pointX[30]=338.3333;
  pointY[30]=148.33333;
  pointX[31]=338.3333;
  pointY[31]=155.0;
  pointX[32]=338.3333;
  pointY[32]=158.33333;
  pointX[33]=335.0;
  pointY[33]=161.66666;
  pointX[34]=308.3333;
  pointY[34]=163.33333;
  pointX[35]=296.66666;
  pointY[35]=163.33333;
  pointX[36]=290.0;
  pointY[36]=161.66666;
  pointX[37]=285.0;
  pointY[37]=158.33333;
  pointX[38]=283.3333;
  pointY[38]=143.33333;
  pointX[39]=286.66666;
  pointY[39]=133.33333;
  pointX[40]=286.66666;
  pointY[40]=133.33333;
  pointX[41]=321.66666;
  pointY[41]=113.33333;
  pointX[42]=355.0;
  pointY[42]=109.99999;
  pointX[43]=371.66666;
  pointY[43]=109.99999;
  pointX[44]=399.99997;
  pointY[44]=119.99999;
  pointX[45]=441.66666;
  pointY[45]=170.0;
  pointX[46]=454.99997;
  pointY[46]=198.33333;
  pointX[47]=458.3333;
  pointY[47]=223.33333;
  pointX[48]=458.3333;
  pointY[48]=238.33333;
  pointX[49]=453.3333;
  pointY[49]=244.99998;
  pointX[50]=449.99997;
  pointY[50]=246.66666;
  pointX[51]=441.66666;
  pointY[51]=246.66666;
  pointX[52]=433.3333;
  pointY[52]=241.66666;
  pointX[53]=431.66666;
  pointY[53]=233.33333;
  pointX[54]=429.99997;
  pointY[54]=223.33333;
  pointX[55]=429.99997;
  pointY[55]=223.33333;
  pointX[56]=456.66666;
  pointY[56]=180.0;
  pointX[57]=474.99997;
  pointY[57]=165.0;
  pointX[58]=496.66666;
  pointY[58]=156.66666;
  pointX[59]=513.3333;
  pointY[59]=156.66666;
  pointX[60]=531.6666;
  pointY[60]=168.33333;
  pointX[61]=548.3333;
  pointY[61]=185.0;
  pointX[62]=561.6666;
  pointY[62]=203.33333;
  pointX[63]=571.6666;
  pointY[63]=219.99998;
  pointX[64]=576.6666;
  pointY[64]=233.33333;
  pointX[65]=576.6666;
  pointY[65]=233.33333;
  pointX[66]=575.0;
  pointY[66]=263.3333;
  pointX[67]=571.6666;
  pointY[67]=266.66666;
  pointX[68]=565.0;
  pointY[68]=273.3333;
  pointX[69]=558.3333;
  pointY[69]=275.0;
  pointX[70]=558.3333;
  pointY[70]=275.0;
  pointX[71]=555.0;
  pointY[71]=271.66666;
  pointX[72]=555.0;
  pointY[72]=261.66666;
  pointX[73]=558.3333;
  pointY[73]=246.66666;
  pointX[74]=561.6666;
  pointY[74]=238.33333;
  pointX[75]=576.6666;
  pointY[75]=226.66666;
  pointX[76]=603.3333;
  pointY[76]=209.99998;
  pointX[77]=615.0;
  pointY[77]=209.99998;
  pointX[78]=625.0;
  pointY[78]=213.33333;
  pointX[79]=631.6666;
  pointY[79]=224.99998;
  pointX[80]=641.6666;
  pointY[80]=239.99998;
  pointX[81]=651.6666;
  pointY[81]=261.66666;
  pointX[82]=655.0;
  pointY[82]=281.66666;
  pointX[83]=655.0;
  pointY[83]=290.0;
  pointX[84]=655.0;
  pointY[84]=300.0;
  pointX[85]=653.3333;
  pointY[85]=303.3333;
  pointX[86]=653.3333;
  pointY[86]=303.3333;
  pointX[87]=655.0;
  pointY[87]=301.66666;
  pointX[88]=661.6666;
  pointY[88]=290.0;
  pointX[89]=678.3333;
  pointY[89]=278.3333;
  pointX[90]=688.3333;
  pointY[90]=273.3333;
  pointX[91]=708.3333;
  pointY[91]=268.3333;
  pointX[92]=723.3333;
  pointY[92]=268.3333;
  pointX[93]=740.0;
  pointY[93]=276.66666;
  pointX[94]=753.3333;
  pointY[94]=293.3333;
  pointX[95]=766.6666;
  pointY[95]=330.0;
  pointX[96]=768.3333;
  pointY[96]=340.0;
  pointX[97]=769.99994;
  pointY[97]=360.0;
  pointX[98]=769.99994;
  pointY[98]=373.3333;
  pointX[99]=769.99994;
  pointY[99]=378.3333;
  pointX[100]=769.99994;
  pointY[100]=378.3333;
  pointX[101]=769.99994;
  pointY[101]=378.3333;
  pointX[102]=766.6666;
  pointY[102]=373.3333;
  pointX[103]=766.6666;
  pointY[103]=365.0;
  pointX[104]=769.99994;
  pointY[104]=353.3333;
  pointX[105]=779.99994;
  pointY[105]=335.0;
  pointX[106]=799.99994;
  pointY[106]=306.66666;
  pointX[107]=799.99994;
  pointY[107]=306.66666;
  pointX[108]=799.9
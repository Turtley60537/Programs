float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=431.66666;
  pointY[0]=176.66666;
  pointX[1]=414.99997;
  pointY[1]=196.66666;
  pointX[2]=396.66666;
  pointY[2]=204.99998;
  pointX[3]=376.66666;
  pointY[3]=209.99998;
  pointX[4]=356.66666;
  pointY[4]=209.99998;
  pointX[5]=348.3333;
  pointY[5]=209.99998;
  pointX[6]=340.0;
  pointY[6]=209.99998;
  pointX[7]=340.0;
  pointY[7]=208.33333;
  pointX[8]=350.0;
  pointY[8]=196.66666;
  pointX[9]=388.3333;
  pointY[9]=170.0;
  pointX[10]=438.3333;
  pointY[10]=151.66666;
  pointX[11]=478.3333;
  pointY[11]=150.0;
  pointX[12]=513.3333;
  pointY[12]=150.0;
  pointX[13]=531.6666;
  pointY[13]=150.0;
  pointX[14]=546.6666;
  pointY[14]=151.66666;
  pointX[15]=548.3333;
  pointY[15]=171.66666;
  pointX[16]=503.3333;
  pointY[16]=209.99998;
  pointX[17]=423.3333;
  pointY[17]=253.33333;
  pointX[18]=336.66666;
  pointY[18]=276.66666;
  pointX[19]=288.3333;
  pointY[19]=276.66666;
  pointX[20]=261.66666;
  pointY[20]=261.66666;
  pointX[21]=234.99998;
  pointY[21]=228.33333;
  pointX[22]=233.33333;
  pointY[22]=190.0;
  pointX[23]=254.99998;
  pointY[23]=156.66666;
  pointX[24]=295.0;
  pointY[24]=135.0;
  pointX[25]=320.0;
  pointY[25]=131.66666;
  pointX[26]=345.0;
  pointY[26]=128.33333;
  pointX[27]=356.66666;
  pointY[27]=135.0;
  pointX[28]=360.0;
  pointY[28]=151.66666;
  pointX[29]=343.3333;
  pointY[29]=176.66666;
  pointX[30]=316.66666;
  pointY[30]=193.33333;
  pointX[31]=290.0;
  pointY[31]=203.33333;
  pointX[32]=280.0;
  pointY[32]=203.33333;
  pointX[33]=268.3333;
  pointY[33]=201.66666;
  pointX[34]=268.3333;
  pointY[34]=181.66666;
  pointX[35]=290.0;
  pointY[35]=153.33333;
  pointX[36]=328.3333;
  pointY[36]=124.99999;
  pointX[37]=371.66666;
  pointY[37]=109.99999;
  pointX[38]=399.99997;
  pointY[38]=109.99999;
  pointX[39]=399.99997;
  pointY[39]=109.99999;
  pointX[40]=448.3333;
  pointY[40]=136.66666;
  pointX[41]=449.99997;
  pointY[41]=166.66666;
  pointX[42]=439.99997;
  pointY[42]=199.99998;
  pointX[43]=411.66666;
  pointY[43]=223.33333;
  pointX[44]=411.66666;
  pointY[44]=223.33333;
  pointX[45]=363.3333;
  pointY[45]=234.99998;
  pointX[46]=363.3333;
  pointY[46]=234.99998;
  pointX[47]=351.66666;
  pointY[47]=199.99998;
  pointX[48]=368.3333;
  pointY[48]=170.0;
  pointX[49]=401.66666;
  pointY[49]=145.0;
  pointX[50]=426.66666;
  pointY[50]=136.66666;
  pointX[51]=456.66666;
  pointY[51]=136.66666;
  pointX[52]=469.99997;
  pointY[52]=158.33333;
  pointX[53]=473.3333;
  pointY[53]=191.66666;
  pointX[54]=461.66666;
  pointY[54]=246.66666;
  pointX[55]=416.66666;
  pointY[55]=290.0;
  pointX[56]=375.0;
  pointY[56]=306.66666;
  pointX[57]=321.66666;
  pointY[57]=313.3333;
  pointX[58]=295.0;
  pointY[58]=313.3333;
  pointX[59]=271.66666;
  pointY[59]=300.0;
  pointX[60]=266.66666;
  pointY[60]=290.0;
  pointX[61]=260.0;
  pointY[61]=281.66666;
  pointStrokeFlag[2]=1;
  pointStrokeFlag[3]=1;
  pointStrokeFlag[4]=1;
  pointStrokeFlag[5]=1;
  pointStrokeFlag[6]=1;
  pointStrokeFlag[7]=1;
  pointStrokeFlag[8]=1;
  pointStrokeFlag[9]=1;
  pointStrokeFlag[18]=1;
  pointStrokeFlag[19]=1;
  pointStrokeFlag[20]=1;
  pointStrokeFlag[21]=1;
  pointStrokeFlag[22]=1;
  pointStrokeFlag[23]=1;
  pointStrokeFlag[24]=1;
  pointStrokeFlag[25]=1;
  pointStrokeFlag[27]=1;
  pointStrokeFlag[28]=1;
  pointStrokeFlag[29]=1;
  pointStrokeFlag[30]=1;
  pointStrokeFlag[31]=1;
  pointStrokeFlag[32]=1;
  pointStrokeFlag[33]=1;
  pointStrokeFlag[34]=1;
  pointStrokeFlag[35]=1;
  pointStrokeFlag[45]=1;
  pointStrokeFlag[46]=1;
  pointStrokeFlag[47]=1;
  pointStrokeFlag[48]=1;
  pointStrokeFlag[49]=1;
  pointStrokeFlag[56]=1;
  pointStrokeFlag[57]=1;
  pointStrokeFlag[58]=1;
  pointStrokeFlag[59]=1;
  pointStrokeFlag[60]=1;
  pointStrokeFlag[61]=1;
  pointStrokeFlag[0]=1;
  pointStrokeFlag[1]=1;
  pointStrokeFlag[2]=1;
  pointStrokeFlag[3]=1;
  pointStrokeFlag[4]=1;
  pointStrokeFlag[5]=1;
  pointStrokeFlag[6]=1;
  pointStrokeFlag[7]=1;
  pointStrokeFlag[8]=1;
  pointStrokeFlag[9]=1;
  pointStrokeFlag[10]=1;
  pointStrokeFlag[11]=1;
  pointStrokeFlag[16]=1;
  pointStrokeFlag[17]=1;
  pointStrokeFlag[18]=1;
  pointStrokeFlag[19]=1;
  pointStrokeFlag[20]=1;
  pointStrokeFlag[21]=1;
  pointStrokeFlag[22]=1;
  pointStrokeFlag[23]=1;
  pointStrokeFlag[24]=1;
  pointStrokeFlag[25]=1;
  pointStrokeFlag[26]=1;
  pointStrokeFlag[27]=1;
  pointStrokeFlag[28]=1;
  pointStrokeFlag[29]=1;
  pointStrokeFlag[30]=1;
  pointStrokeFlag[31]=1;
  pointStrokeFlag[32]=1;
  pointStrokeFlag[33]=1;
  pointStrokeFlag[34]=1;
  pointStrokeFlag[35]=1;
  pointStrokeFlag[36]=1;
  pointStrokeFlag[37]=1;
  pointStrokeFlag[38]=1;
  pointStrokeFlag[39]=1;
  pointStrokeFlag[40]=1;
  pointStrokeFlag[41]=1;
  pointStrokeFlag[42]=1;
  pointStrokeFlag[43]=1;
  pointStrokeFlag[44]=1;
  pointStrokeFlag[45]=1;
  pointStrokeFlag[46]=1;
  pointStrokeFlag[47]=1;
  pointStrokeFlag[48]=1;
  pointStrokeFlag[49]=1;
  pointStrokeFlag[50]=1;
  pointStrokeFlag[51]=1;
  pointStrokeFlag[52]=1;
  pointStrokeFlag[53]=1;
  pointSt
float [] pointX = new float [5000];
float [] pointY = new float [5000];
int [] pointStrokeFlag = new int [5000];
int [] pointMoveFlag = new int [5000];
int [] pointMoveFLAGX = new int [5000];
int [] pointMoveFLAGY = new int [5000];
float [] pointVX = new float [5000];
float [] pointVY = new float [5000];

float [] lineX1 = new float [500];
float [] lineY1 = new float [500];
float [] lineX2 = new float [500];
float [] lineY2 = new float [500];
float [] lineW = new float [500];
float [] lineH = new float [500];
int [] lineStrokeFlag = new int [500];
int [] lineMoveFlag = new int [500];
int [] lineMoveFLAGX = new int [500];
int [] lineMoveFLAGY = new int [500];
float [] lineVX = new float [500];
float [] lineVY = new float [500];

float [] rectX = new float [500];
float [] rectY = new float [500];
float [] rectW = new float [500];
float [] rectH = new float [500];
float [] rectX2 = new float [500];
float [] rectY2 = new float [500];
int [] rectFillFlag = new int [500];
int [] rectMoveFlag = new int [500];
int [] rectMoveFLAGX = new int [500];
int [] rectMoveFLAGY = new int [500];
float [] rectVX = new float [500];
float [] rectVY = new float [500];

int [] beginShapeFLAG = new int [500];
float [][] vertexX = new float [500][500];
float [][] vertexY = new float [500][500];
int [] vertexFillFlag = new int [500];
int [] vertexFlag = new int [500];
int [] lastVertexFlag = new int [500];
int vertexCount;
int [] vertexMoveFlag = new int [500];
float [] vertexMoveFLAGX = new float [500];
float [] vertexMoveFLAGY = new float [500];
float [] MaxX = new float [500];
float [] minX = new float [500];
float [] MaxY = new float [500];
float [] minY = new float [500];
float [][] DistX = new float [500][500];
float [][] distX = new float [500][500];
float [][] DistY = new float [500][500];
float [][] distY = new float [500][500];
float [] vertexVX = new float [500];
float [] vertexVY = new float [500];

int [] ellipFillFlag = new int [500];
int [] ellipMoveFlag = new int [500];
int [] ellipMoveFLAGX = new int [500];
int [] ellipMoveFLAGY = new int [500];
float [] ellipX = new float [500];
float [] ellipY = new float [500];
float [] ellipR1 = new float [500];
float [] ellipR2 = new float [500];
int [] ellipFlag = new int [500];
int [] ellipFLAG = new int [500];
float [] ellipVX = new float [500];
float [] ellipVY = new float [500];

void setup(){
  size(1000, 600);
  for(int p=0; p<5000; p++){
    pointVX[p]=random(1, 3);
    pointVY[p]=random(1, 3);
    pointMoveFLAGX[p]=(int)random(2);
    pointMoveFLAGY[p]=(int)random(2);
  }
  for(int l=0; l<500; l++){
    lineVX[l]=random(1, 3);
    lineVY[l]=random(1, 3);
    lineMoveFLAGX[l]=(int)random(2);
    lineMoveFLAGY[l]=(int)random(2);
  }
  for(int r=0; r<500; r++){
    rectVX[r]=random(1, 3);
    rectVY[r]=random(1, 3);
    rectMoveFLAGX[r]=(int)random(2);
    rectMoveFLAGY[r]=(int)random(2);
  }
  for(int v=0; v<500; v++){
    vertexVX[v]=random(1, 3);
    vertexVY[v]=random(1, 3);
    vertexMoveFLAGX[v]=(int)random(2);
    vertexMoveFLAGY[v]=(int)random(2);
  }
  for (int e=0; e<500; e++) {
    ellipVX[e]=random(1, 3);
    ellipVY[e]=random(1, 3);
    ellipMoveFLAGX[e]=(int)random(2);
    ellipMoveFLAGY[e]=(int)random(2);
  }
  pointX[0]=141.66666;
  pointY[0]=63.333332;
  pointX[1]=166.66666;
  pointY[1]=88.33333;
  pointX[2]=193.33333;
  pointY[2]=130.0;
  pointX[3]=206.66666;
  pointY[3]=165.0;
  pointX[4]=211.66666;
  pointY[4]=190.0;
  pointX[5]=208.33333;
  pointY[5]=203.33333;
  pointX[6]=198.33333;
  pointY[6]=213.33333;
  pointX[7]=201.66666;
  pointY[7]=209.99998;
  pointX[8]=209.99998;
  pointY[8]=198.33333;
  pointX[9]=229.99998;
  pointY[9]=178.33333;
  pointX[10]=270.0;
  pointY[10]=145.0;
  pointX[11]=326.66666;
  pointY[11]=116.666664;
  pointX[12]=380.0;
  pointY[12]=99.99999;
  pointX[13]=413.3333;
  pointY[13]=98.33333;
  pointX[14]=413.3333;
  pointY[14]=98.33333;
  pointX[15]=421.66666;
  pointY[15]=116.666664;
  pointX[16]=406.66666;
  pointY[16]=128.33333;
  pointX[17]=380.0;
  pointY[17]=141.66666;
  pointX[18]=368.3333;
  pointY[18]=145.0;
  pointX[19]=368.3333;
  pointY[19]=141.66666;
  pointX[20]=380.0;
  pointY[20]=126.666664;
  pointX[21]=414.99997;
  pointY[21]=106.666664;
  pointX[22]=414.99997;
  pointY[22]=106.666664;
  pointX[23]=426.66666;
  pointY[23]=109.99999;
  pointX[24]=414.99997;
  pointY[24]=116.666664;
  pointX[25]=394.99997;
  pointY[25]=123.33333;
  pointX[26]=373.3333;
  pointY[26]=131.66666;
  pointX[27]=373.3333;
  pointY[27]=131.66666;
  pointX[28]=361.66666;
  pointY[28]=131.66666;
  pointX[29]=368.3333;
  pointY[29]=116.666664;
  pointX[30]=404.99997;
  pointY[30]=98.33333;
  pointX[31]=426.66666;
  pointY[31]=96.666664;
  pointX[32]=463.3333;
  pointY[32]=103.33333;
  pointX[33]=478.3333;
  pointY[33]=123.33333;
  pointX[34]=478.3333;
  pointY[34]=123.33333;
  pointX[35]=434.99997;
  pointY[35]=193.33333;
  pointX[36]=423.3333;
  pointY[36]=203.33333;
  pointX[37]=409.99997;
  pointY[37]=203.33333;
  pointX[38]=399.99997;
  pointY[38]=198.33333;
  pointX[39]=408.3333;
  pointY[39]=196.66666;
  pointX[40]=421.66666;
  pointY[40]=196.66666;
  pointX[41]=429.99997;
  pointY[41]=201.66666;
  pointX[42]=436.66666;
  pointY[42]=216.66666;
  pointX[43]=436.66666;
  pointY[43]=234.99998;
  lineX1[1]=224.99998;
  lineY1[1]=76.666664;
  lineX2[1]=388.3333;
  lineY2[1]=254.99998;
  lineX1[2]=413.3333;
  lineY1[2]=308.3333;
  lineX2[2]=441.66666;
  lineY2[2]=351.66666;
  lineX1[3]=424.99997;
  lineY1[3]=355.0;
  lineX2[3]=291.66666;
  lineY2[3]=373.3333;
  lineX1[4]=265.0;
  lineY1[4]=346.66666;
  lineX2[4]=318.3333;
  lineY2[4]=283.3333;
  lineX1[5]=416.66666;
  lineY1[5]=185.0;
  lineX2[5]=506.66666;
  lineY2[5]=185.0;
  lineX1[6]=520.0;
  lineY1[6]=194.99998;
  lineX2[6]=521.6666;
  lineY2[6]=228.33333;
  rectX[1]=281.66666;
  rectY[1]=96.666664;
  rectW[1]=48.333344;
  rectH[1]=25.0;
  rectX[2]=348.3333;
  rectY[2]=155.0;
  rectW[2]=33.333344;
  rectH[2]=106.66666;
  rectX[3]=373.3333;
  rectY[3]=283.3333;
  rectW[3]=-75.0;
  rectH[3]=60.0;
  rectX[4]=143.33333;
  rectY[4]=363.3333;
  rectW[4]=-8.333328;
  rectH[4]=-15.0;
  rectX[5]=95.0;
  rectY[5]=270.0;
  rectW[5]=36.666656;
  rectH[5]=-31.666672;
  rectX[6]=218.33333;
  rectY[6]=188.33333;
  rectW[6]=174.99998;
  rectH[6]=-21.666672;
  rectX[7]=555.0;
  rectY[7]=121.666664;
  rectW[7]=60.0;
  rectH[7]=39.999992;
  rectX[8]=598.3333;
  rectY[8]=198.33333;
  rectW[8]=-83.33331;
  rectH[8]=79.999985;
  rectX[9]=353.3333;
  rectY[9]=256.66666;
  rectW[9]=-50.0;
  rectH[9]=-33.33333;
  rectX[10]=109.99999;
  rectY[10]=128.33333;
  rectW[10]=-43.33333;
  rectH[10]=-3.3333359;
  vertexX[0][0]=338.3333;
  vertexY[0][0]=151.66666;
  vertexX[0][1]=321.66666;
  vertexY[0][1]=173.33333;
  vertexX[0][2]=231.66666;
  vertexY[0][2]=305.0;
  vertexX[0][3]=241.66666;
  vertexY[0][3]=325.0;
  vertexX[0][4]=459.99997;
  vertexY[0][4]=331.66666;
  vertexX[0][5]=486.66666;
  vertexY[0][5]=260.0;
  vertexX[0][6]=488.3333;
  vertexY[0][6]=231.66666;
  vertexX[0][7]=443.3333;
  vertexY[0][7]=285.0;
  vertexX[0][8]=454.99997;
  vertexY[0][8]=315.0;
  vertexX[1][0]=661.6666;
  vertexY[1][0]=323.3333;
  vertexX[1][1]=665.0;
  vertexY[1][1]=303.3333;
  vertexX[1][2]=431.66666;
  vertexY[1][2]=376.66666;
  vertexX[1][3]=456.66666;
  vertexY[1][3]=331.66666;
  vertexX[1][4]=576.6666;
  vertexY[1][4]=256.66666;
  vertexX[1][5]=685.0;
  vertexY[1][5]=348.3333;
  vertexX[1][6]=643.3333;
  vertexY[1][6]=459.99997;
  ellipX[1]=183.33333;
  ellipY[1]=136.66666;
  ellipR1[1]=61.666656;
  ellipR2[1]=43.333344;
  ellipX[2]=318.3333;
  ellipY[2]=243.33333;
  ellipR1[2]=46.666687;
  ellipR2[2]=66.66667;
  ellipX[3]=391.66666;
  ellipY[3]=340.0;
  ellipR1[3]=36.666656;
  ellipR2[3]=48.333313;
  ellipX[4]=449.99997;
  ellipY[4]=404.99997;
  ellipR1[4]=-1.6666565;
  ellipR2[4]=16.666687;
  ellipX[5]=168.33333;
  ellipY[5]=453.3333;
  ellipR1[5]=-16.666672;
  ellipR2[5]=-13.3333435;
  ellipX[6]=145.0;
  ellipY[6]=366.66666;
  ellipR1[6]=3.3333282;
  ellipR2[6]=-46.666656;
  ellipX[7]=180.0;
  ellipY[7]=268.3333;
  ellipR1[7]=73.33333;
  ellipR2[7]=-31.666656;
  ellipX[8]=380.0;
  ellipY[8]=160.0;
  ellipR1[8]=126.66666;
  ellipR2[8]=-26.666672;
  ell